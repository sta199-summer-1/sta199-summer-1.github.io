{
  "hash": "f6c569f07777600582ceb644351ff415",
  "result": {
    "markdown": "---\ntitle: \"Teaching (with) Quarto\"\nsubtitle: \"Teaching Quarto in Intro to Data Science\"\ndate: \"Aug\"\nformat: revealjs\n---\n\n\n## Outline \n\n-- Why \n\n-- What \n\n-- How\n\n-- Benefits \n\n- of Quarto in Introductory Data Science\n\n## What Is Data Science\n\n- Answers will vary \n\n- science of planning for, acquisition, management, analysis of, and inference from data‚Äù (NSF2014)\n\n## What Is Data Science\n\n- Data scientists are involved from the beginning to end stages of the research process \n\n- The research process is much more than learning how to model data \n\n## Reproduciability \n\nCrisis: Lack of Trust in Science \n\n![](images/01-welcome-199/pnas.png){fig-align=\"center\"}\n\n## Argument for Quarto \n\n-- New generation R-markdown \n\n-- results from your data analysis and written commentary into a reproducible document \n\n## Argument for Quarto\n\nTeaching reproducibility tools (such as Quarto) should not be viewed as an additional topic, but instead should be the foundation behind any introductory course to instill good habits for future researchers \n\nMake reproducible research and publications the norm rather than the exception\n\n# How \n\n## Quarto in Introductory Data Science \n\nFrom the perspective of ...\n\n-- 150 students with little to no statistics / data science / coding experience \n\n-- Teaching using the `dsbox` curricula \n\n-- Students are expected to use R \n\n-- Topics include... \n\n## How \n\nSeamlessly integrates into more modernized teaching \n\nTeach quarto code side-by-side with the other coding languages \n\n## Example \n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<iframe title=\"Embedded HTML\" src=\"./images/ezgif.com-crop.gif\" height=\"2400\" width=\"2400\"></iframe>\n```\n:::\n:::\n\n\n\n## Example\n\nShow code writing packages + code to to turn messages off \n\nHighlight informative syntax and completion \n\nInformative syntax aligns with what you want to accomplish \"how do I turn these messages off?\"\n\n\n## Example \n\nShow code controlling fig width and height to again Highlight informative syntax and completion. \"How do I adjust my figure width and figure height?\"\n\n## Visual Tab \n\nHighlight how coding can be more approachable in the visual tab \n\nGets students trained to think about and visualize professional documents throughout the process. Making this the expectation, and again not something additional \n\n## Errors \n\nHighlight the approachability of Quarto error messages and how this can help alleviate some tension in an intro class\n\nExamples of common errors and the error messages \n\n\n## From the instructor's perspective \n\nEfficiency: Consistent formatting -> easier grading\n\nInvest time into lessons / activities now -> adapt later \n\n## If you don't use R \n\nExtendability: Use with Python, and Julia, and Observable, and more\n\n## Tips for starting with Quarto\n\nMinimal YAML\nMinimal chunk options\nUse well scaffolded Quarto documents\nRender early and often!\n\n\n\n\n\n\n\n\n\n\n## What topics are covered \n\n-- Topic 1 \n\n-- Topic 2 \n\n-- Topic 3 \n\n## Example Application Exericse \n\n-- Emphasis on reproducibility and taking time to show that during activities \n\n\n## Topics specific in Quarto \n\n-- How to create professional documents...\n\n--- YAML customization\n\n--- Integrate R-code (control with code chunk arguments)\n\n--- customize figures \n\n--- website generation (show off student work at the end of presentation)\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n\r\n      // dispatch for htmlwidgets\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for reveal\r\n    if (window.Reveal) {\r\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\r\n        fireSlideChanged(event.previousSlide, event.currentSlide);\r\n      });\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}