{
  "hash": "443a22c7f60fabdfce152fa50e97b3f4",
  "result": {
    "markdown": "---\ntitle: \"Inference + Review\"\nsubtitle: \"Lecture 23\"\ndate: \"November 16th, 2022\"\nformat: revealjs\n---\n\n\n## Checklist\n\n-- Clone `exam2-review` - This is the part of ae-21 that we didn't finish with end review questions\n\n## Announcements\n\n-- Exam 2 on Thursday\n\n-   Released at noon\n\n-   No slack or TA office hours\n\n-   Don't cheat\n\n-   Due Monday at 2\n\n-- All keys are posted (or will be posted before noon tomorrow)\n\n## Grading Questions\n\n-- EC for Exam 1 is not in\n\n-- Lowest HW is dropped\n\n-- Lowest Lab is dropped\n\n## Study Tips - Variables\n\n-- Identify variables\n\n-   Categorical vs Quantitative\n\n-   Explanatory vs Response\n\n## Models by Variable Type {.smaller}\n\n-- Simple Linear Regression: 1 Quantitative Response; 1 Categorical or Quantitative Explanatory Variable\n\n-- Mulitple Linear Regression: 1 Quantitative Response; 2 or more Categorical or Quantitative Explanatory Variables\n\n-- Logistic Regression: 1 Categorical Response (Binary); 1 or more Categorical or Quantitative Explanatory Variables\n\n## Study Tips - Make your own guide\n\n\n::: {.cell}\n\n```{.r .cell-code}\nabb |>    \n  summarize(ppg.mean = mean(ppg)) #Summarize is used to calculate a summary statistic \n                                  #arguments: new name = calculated statistic\n\n?summarize \n```\n:::\n\n\nReference *Examples* at bottom of help page, AEs, HWs, and Labs.\n\n## Exam Format\n\n-- Short response questions\n\n-- Application questions\n\n-- Extension questions\n\n## Goals\n\n-- Review\n\n-   Simpson's Paradox\n\n-   P-value interpretation\n\n-- Compare two means, and do a bootstrap interval\n\n-- Prediction and bootstrap interval for the slope\n\n## Simpson's Paradox {.smaller}\n\nDescribe the relationships observed in the scatter plot. Comment on: Form; Strength; Direction.\n\n![](images/simp1.png){width=\"250\" height=\"400\" fig-align=\"center\"}\n\n## Simpson's Paradox - Same Data... Ungrouped {.smaller}\n\nWhat about now?\n\n![](images/simp2.png){width=\"350\" height=\"400\" fig-align=\"center\"}\n\n... a trend appears in groups of data but disappears or reverses when the groups are combined.\n\n## p-values\n\n-- What is it?\n\n-- How do we interpret it?\n\n## p-values\n\n-- **Probability**\n\n-- of observing **what we did** or something **more extreme**\n\n-- given $H_O$ = T\n\n![](images/pvalue.png){fig-align=\"center\"}\n\n## Example\n\nAirbnb Example\n\n-- Response variable: price per guest\n\n-- Assume Ho: $\\mu$ = 60\n\n-- p-value \\~ 0.14\n\n![](images/pvalueexample.png){fig-align=\"center\"}\n\n## Example {.smaller}\n\n![](images/pvalueexample.png)\n\nThe **probability** of observing a mean price per guest of **76.6 dollars**, or **something larger**, assuming that the **true mean price per guest of Ashville, NC Airbnbs in June 2020 was 60 dollars** is equal to \\~ 0.14.\n\n# exam2-review\n",
    "supporting": [
      "exam2-review_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n\r\n      // dispatch for htmlwidgets\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for reveal\r\n    if (window.Reveal) {\r\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\r\n        fireSlideChanged(event.previousSlide, event.currentSlide);\r\n      });\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}