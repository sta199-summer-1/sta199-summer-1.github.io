{
  "hash": "76fde1048f594f6decf5fb85d34cc34e",
  "result": {
    "markdown": "---\ntitle: \"Logistic Regression\"\nsubtitle: \"Lecture 16\"\ndate: \"March 8th, 2022\"\nformat: revealjs\n---\n\n\n## Checklist\n\n-- Clone `ae-15`\n\n## Announcements\n\n-- HW 3 due Friday (3-10)\n\n-- Project Proposal due Friday (3-10)\n\n## Announcements: HW 6 - Statistics Experience \n\n-- The goal of the statistics experience assignments is to help you engage with the statistics and data science communities outside of the classroom\n\n-- No GitHub repo for this assignment\n\nExperience statistics outside of the classroom\n\n\n## Examples \n\n-- Attend a talk or conference\n\n-- Talk with a statistician/ data scientist (myself and TAs do not count)\n\n-- Listen to a podcast / watch video\n\n-- Participate in a data science competition or challenge\n\n-- Read a book on statistics/data science\n\n-- TidyTuesday challenges\n\n-- Coding out loud project\n\n## Data Fest 2023 at Duke {.smaller}\n\n-- data analysis competition where teams of up to five students attack a large, complex, and surprise dataset over a weekend\n\n-- DataFest is a great opportunity to gain experience that employers are looking for\n\n-- Each team will give a brief presentation of their findings that will be judged by a panel of judges comprised of faculty and professionals from a variety of fields.\n\n![](images/DataFestFlyer.png)\n\n## Hw 6 - Statistical Experience \n\n-- Summarize your experience\n\n-- Guidelines are in the instructions \n\n# Where is the assignment? \n\n\n## Warm Up\n\n-- What is the difference between R-squared and Adjusted R-squared? \n\n--- How are each defined?\n\n--- When are each appropriate to use?\n\n## Warm Up\n\n-- How are each defined?\n\nR-squared: The proportion of variability in our response that is explained by our model \n\nAdjusted-R-squared: Measure of overall model fit\n\n## Warm Up\n\n--- When are each appropriate to use?\n\nR-squared: when the models have the same number of variables \n\nAdjusted-R-squared: when the models have a different number of variables\n\n\n## Goals\n\n-- The What, Why, and How of Logistic Regression\n\n## What is Logistic Regreesion\n\n-   Similar to linear regression.... but\n\n-   Modeling tool when our response is categorical\n\n## What we will do today\n\n-- This type of model is called a generalized linear model\n\n![](images/logistic.png){fig-align=\"center\"}\n\n# Start from the beginning\n\n## Terms\n\n-- Bernoulli Distribution\n\n-   2 outcomes: Success (p) or Failure (1-p)\n\n-   $y_i$ \\~ Bern(p)\n\n-   What we can do is we can use our explanatory variable(s) to model p\n\n## 2 Steps\n\n-- 1: Define a linear model\n\n-- 2: Define a link function\n\n## A linear model\n\n$\\eta_i = \\beta_o + \\beta_1*X_i + ...$\n\nNote: We use $p_i$ for estimated probabilities\n\n-   But we can't stop here\n\n# Think about what a linear model looks like \n\n## Next steps \n\n-- Preform a transformation to our response variable so it has the appropriate range of values\n\n## Generalized linear model\n\n-   Next, we need a link function that relates the linear model to the parameter of the outcome distribution i.e. **transform the linear model to have an appropriate range**\n\n## Goal\n\n-- Or.... takes values between negative and positive infinity and map them to probabilities\n\n## Logit Link function\n\n-- A logit link function transforms the probabilities of the levels of a categorical response variable to a continuous scale that is unbounded\n\n-- Note: log is in reference to natural log\n\n## What's this look like\n\nTakes a \\[0,1\\] probability and maps it to log odds (-$\\infty$ to $\\infty$.)\n\n![](images/logit.png){fig-align=\"center\"}\n\n## Almost.... \n\nThis isn't exactly what we need though.....\n\nWill help us get to our goal\n\n## Logit Link Function \n\nThe logit link function is defined as follows: \n\n![](images/logitlink.png){fig-align=\"center\"}\n\n\n## Generalized linear model\n\n-   $logit(p)$ = $\\widehat{\\beta_o} +\\widehat{\\beta}_1X1 + ....$\n\n-   logit(p) is also known as the log-odds\n\n-   logit(p) = $log(\\frac{p}{1-p})$\n\n-   $log(\\frac{p}{1-p})$ = $\\widehat{\\beta_o} +\\widehat{\\beta}_1X1 + ....$\n\n## One final fix\n\n-- Recall, the goal is to take values between -$\\infty$ and $\\infty$ and map them to probabilities. We need the opposite of the link function... or the *inverse*\n\n-- How do we take the inverse of a natural log?\n\n-   Taking the inverse of the logit function will map arbitrary real values back to the range \\[0, 1\\]\n\n## So\n\n-   $logit(p)$ = $\\widehat{\\beta_o} +\\widehat{\\beta}_1X1 + ....$\n\n-   $$log(\\frac{p}{1-p}) = \\widehat{\\beta_o} +\\widehat{\\beta}_1X1 + ....$$\n\n-   Lets take the inverse of the logit function\n\n# $$p = \\frac{e^{\\widehat{\\beta_o} + \\widehat{\\beta_1}X1 + ...}}{1 + e^{\\widehat{\\beta_o} + \\widehat{\\beta_1}X1 + ...}}$$\n\n## \n\nExample Figure:\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](16-logistic-s23_files/figure-revealjs/unnamed-chunk-1-1.png){width=960}\n:::\n:::\n\n\n\n## What we will do today\n\n![](images/logistic.png){fig-align=\"center\"}\n\n# ae-15\n\n## Takeaways\n\n-- We can not model these data using the tools we currently have\n\n-- We can overcome some of the shortcoming of regression by fitting a *generalized linear regression model*\n\n-- We can model binary data using an inverse logit function to model probabilities of success\n",
    "supporting": [
      "16-logistic-s23_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n\r\n      // dispatch for htmlwidgets\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for reveal\r\n    if (window.Reveal) {\r\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\r\n        fireSlideChanged(event.previousSlide, event.currentSlide);\r\n      });\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}