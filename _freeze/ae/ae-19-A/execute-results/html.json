{
  "hash": "2706de2a1c2f6e555cd9ddae0d03f3da",
  "result": {
    "markdown": "---\ntitle: \"Quantifying uncertainty\"\nformat: html\neditor: visual\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidymodels)\n```\n:::\n\n\n# Learning goals\n\nBy the end of today, you will...\n\n-   Define and understand sampling variability\n-   Introduce bootstrapping\n-   Introduce confidence intervals\n\n## Population vs Sample\n\n### Motivation\n\nWe have data on the price per guest (ppg) for a random sample of 50 Airbnb listings in 2020 for Asheville, NC. We are going to use these data to investigate what we would of expected to pay for an Airbnb in in Asheville, NC in June 2020. Read in the data and answer the following questions.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nabb <- read_csv(\"data/asheville.csv\")\n\nglimpse(abb)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 50\nColumns: 1\n$ ppg <dbl> 48.00000, 40.00000, 99.00000, 13.00000, 55.00000, 75.00000, 74.000…\n```\n:::\n:::\n\n\n## Terminology\n\n-   Population parameter - What we are interested in. Statistical measure that describes an entire population.\n\n-   Sample statistic (point estimate) - describes a sample. A piece of information you get from a fraction of the population.\n\nUse these data and the tools we've learned in this class to come up with your best guess for what you would expect to pay (i.e. true price) for an Airbnb in Asheville, NC (June 2020).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nabb |> \n  summarize(ppg.mean = mean(ppg))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n  ppg.mean\n     <dbl>\n1     76.6\n```\n:::\n:::\n\n\nDo you think your guess is correct?\n\n*Not really*\n\n-   If you want to estimate a population parameter, do you prefer to report a range of values the parameter might be in, or a single value?\n\n*Range of values*\n\n-   Variability - How spread out your data are. Uncertainty.\n\nSuppose we split the class in half and ask each student their height. Then, we calculate the mean height of students on each side of the classroom. Would you expect these two means to be exactly equal, close but not equal, or wildly different?\n\n*Close, but not equal*\n\n## Why do we care?\n\n**We can quantify the variability of the sample statistics to help calculate a range of plausible values for the population parameter of interest**\n\n**Bootstrapping is a statistical procedure that re samples a single data set to create many simulated samples.**\n\n# Simulation: via bootstrapping or \"resampling\" techniques (today's focus)\n\nThe term bootstrapping comes from the phrase \"pulling oneself up by one's bootstraps\", which is a metaphor for accomplishing an impossible task without any outside help\n\nImpossible task: estimating a population parameter using data from only the given sample.\n\nNote: This notion of saying something about a population parameter using only information from an observed sample is the crux of statistical inference, it is not limited to bootstrapping.\n\n## How do we do this?\n\nGoal: create a distribution of sample statistics under \"the same\" conditions. How do we do this?\n\n*Demo*\n\n*- Resample with replacement from our data n (50) times* *- Calculate the new resampled mean* *- Plot it* *- Do this entire process many many times*\n\n## Confidence Interval\n\n-   What is it?\n\n*Range of plausiable values for our population parameter... just like we wanted!*\n\n### Exercise 1 - Airbnb\n\nLet's bootstrap!\n\nIt's good practice to ask yourself the following questions:\n\n-   What is my sample statistic? *76.6*\n-   How many draws do we need for our bootstrap sample? *n number of times (50)*\n\nFill in the \\*\\*\\* from the bootstrap sample code below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(12345) \nboot_df <- abb |>\n  specify(response = ppg) |>\n  generate(reps = 10000, type = \"bootstrap\") |>\n  calculate(stat = \"mean\")\n\nglimpse(boot_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 10,000\nColumns: 2\n$ replicate <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1…\n$ stat      <dbl> 81.03667, 63.22333, 81.23333, 76.11333, 81.31833, 84.60500, …\n```\n:::\n:::\n\n\n-   Take a glimpse at `boot_df`. What do you see?\n\nWe see 10,000 re-sampled means from our original data. \n\n-   Plot a histogram of `boot_df`. Where is it centered? Why does this make sense?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboot_df |> \n  ggplot(\n    aes( x = stat)\n  ) + \n  geom_histogram()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](ae-19-A_files/figure-html/hist-1-1.png){width=672}\n:::\n:::\n\n\nNow, let's use `boot_df`to create our 95% confidence interval.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(12345)\nboot_df |>\n  summarize(lower = quantile(stat, 0.025),\n            upper = quantile(stat, 0.975))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 2\n  lower upper\n  <dbl> <dbl>\n1  63.3  91.0\n```\n:::\n:::\n\n\nLet's visualize our confidence interval by adding a vertical line at each of these values. Use the code you wrote above and add two lines using `geom_vline`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboot_df |>\n  ggplot(\n    aes(x = stat)\n  ) + \n  geom_histogram() + \n  geom_vline(xintercept = c(63.3, 91.0)) \n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](ae-19-A_files/figure-html/CI-Viz-1.png){width=672}\n:::\n:::\n\n\n## Interpretation\n\nConfidence intervals - range of plausible values for our parameter of interest\n\nConfidence intervals are often misinterpreted as probability....\n\nLets explore: http://www.rossmanchance.com/ISIapplets.html\n\n-   How do we interpret this?\n\nA There is a 95% probability the true mean price per night for an Airbnb in Asheville is between 63.3 and 91.0.\n\nB There is a 95% probability the price per night for an Airbnb in Asheville is between 63.3 and 91.0.\n\n**C We are 95% confident the true mean price per night for Airbnbs in Asheville is between 63.3 and 91.0 \\$.**\n\nD We are 95% confident the price per night for an Airbnb in Asheville is between 63.3 and 91.0.\n\n## Optional\n\nNow, create a 90% confidence interval. Report it below. Is it wider or more narrow than the 95% confidence interval?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#insert-code-here\n```\n:::\n",
    "supporting": [
      "ae-19-A_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}