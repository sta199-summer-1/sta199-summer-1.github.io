{
  "hash": "90bd62267ff83c62c62586b1f4ac0e00",
  "result": {
    "markdown": "---\ntitle: \"ae-02 Data visualization\"\nauthor: [INSERT NAME HERE]\nformat: html\neditor: visual\n---\n\n\n## Packages and Data\n\nWe will be using functions from the **tidyverse** package. Please library the package before we begin. If R can't find the package, you need to install the package using **install.packages(\"tidyverse**)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstarwars <- read_csv(\"data/starwars.csv\")\n```\n:::\n\n\nFor this analysis, we will data on the characters in the *Stars Wars* movie franchise.\n\n## Getting started\n\n### Get to know the data\n\nWe can use the `glimpse` function to get an overview (or \"glimpse\") of the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(starwars)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 87\nColumns: 14\n$ name       <chr> \"Luke Skywalker\", \"C-3PO\", \"R2-D2\", \"Darth Vader\", \"Leia Or…\n$ height     <dbl> 172, 167, 96, 202, 150, 178, 165, 97, 183, 182, 188, 180, 2…\n$ mass       <dbl> 77.0, 75.0, 32.0, 136.0, 49.0, 120.0, 75.0, 32.0, 84.0, 77.…\n$ hair_color <chr> \"other\", \"other\", \"other\", \"none\", \"brown/auburn\", \"brown/a…\n$ skin_color <chr> \"fair\", \"gold\", \"white, blue\", \"white\", \"light\", \"light\", \"…\n$ eye_color  <chr> \"blue\", \"yellow\", \"other\", \"yellow\", \"brown\", \"blue\", \"blue…\n$ birth_year <dbl> 19.0, 112.0, 33.0, 41.9, 19.0, 52.0, 47.0, NA, 24.0, 57.0, …\n$ sex        <chr> \"male\", \"none\", \"none\", \"male\", \"female\", \"male\", \"female\",…\n$ gender     <chr> \"masculine\", \"masculine\", \"masculine\", \"masculine\", \"femini…\n$ homeworld  <chr> \"Tatooine\", \"Tatooine\", \"Naboo\", \"Tatooine\", \"Alderaan\", \"T…\n$ species    <chr> \"Human\", \"Droid\", \"Droid\", \"Human\", \"Human\", \"Human\", \"Huma…\n$ films      <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ vehicles   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ starships  <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n```\n:::\n:::\n\n\n-   How many observations (rows) are in the data set? 87 rows\n-   How many variables (columns) are in the data set? 14\n-   What does each row represent? Each column?\n\n### Getting started with `ggplot2`\n\n-   `ggplot` creates the initial base coordinate system, and we will add layers to that base. We first specify the data set we will use with `data = starwars`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = starwars)\n```\n\n::: {.cell-output-display}\n![](ae-02-viz-data-types-A_files/figure-html/starwars-base-1.png){width=672}\n:::\n:::\n\n\n-   The `mapping` argument is paired with an aesthetic (`aes`), which tells us how the variables in our data set should be mapped to the visual properties of the graph. In ggplot2 , aesthetic means \"something you can see\". Each aesthetic is a mapping between a visual cue and a variable. Let's set the stage to explore the relationship between the height and mass of each Star Wars character.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = starwars, \n       mapping = aes(x = height , y = mass)) \n```\n\n::: {.cell-output-display}\n![](ae-02-viz-data-types-A_files/figure-html/starwars-map-1.png){width=672}\n:::\n:::\n\n\n-   What type of variable is height?\n\n-   What type of variable is mass?\n\n-   What plot is most appropriate to explore the relationship between height and mass?\n\n-   The `geom_xx` function specifies the type of plot we want to use to represent the data. In the code below, we use `geom_point` which creates a plot where each observation is represented by a point.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = starwars, \n       mapping = aes(x = height, y = mass)) +\n  geom_point() \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 28 rows containing missing values (geom_point).\n```\n:::\n\n::: {.cell-output-display}\n![](ae-02-viz-data-types-A_files/figure-html/starwars-point-1.png){width=672}\n:::\n:::\n\n\n## Step 1\n\nModify the following plot to change the color of all points to `\"pink\"`. Note: pink needs to be in quotes because it is not a variable mapped to from our data to our plot. Because it is not a variable being mapped to our plot, it does not go in `aes`thetic.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = starwars, \n       mapping = aes(x = height, y = mass)) +\n  geom_point(color = \"pink\" ) \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 28 rows containing missing values (geom_point).\n```\n:::\n\n::: {.cell-output-display}\n![](ae-02-viz-data-types-A_files/figure-html/starwars-plot-color-1.png){width=672}\n:::\n:::\n\n\n-   Do you notice anything interesting about these data?\n\n## Step 1B\n\nFor the sake of this activity, we are going to remove the extreme character.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Remove outlier \nstarwars <- subset(starwars, mass < 1000)\n```\n:::\n\n\n## Step 2\n\nAdd labels for the title and x and y axes. Change the \\_\\_\\_\\_\\_ to informative labels. This is good practice. Often, you do not want to use the column headers as labels.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = starwars, \n       mapping = aes(x = height, y = mass)) +\n  geom_point(color = \"pink\") + \n  labs(x = \"Height (in inches)\", \n       y = \"Mass\", \n       title = \"Height \\nvs Mass\")\n```\n\n::: {.cell-output-display}\n![](ae-02-viz-data-types-A_files/figure-html/starwars-plot-labels-1.png){width=672}\n:::\n:::\n\n\n## Step 3\n\nAn `aes`thetic is a visual property of one of the objects in your plot. Aesthetic options are:\n\n-   shape\n-   color\n-   size\n-   fill\n\nModify the plot below, so the color of the points is based on `hair_color`. Note: When you add `aes`thetic options, they need to be seperated by a , . What happens if you put hair_color in geom_point?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = starwars, \n       mapping = aes(x = height, y = mass, color = hair_color )) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](ae-02-viz-data-types-A_files/figure-html/starwars-aes-color-1.png){width=672}\n:::\n:::\n\n\n-   Does the relationship of characters' height and mass change based on their hair color?\n\n## Step 4\n\nModify the plot below, so the color of the points is based on `hair_color` and the size is based on `birth_year`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = starwars, \n       mapping = aes(x = height, y = mass, color = hair_color, size = birth_year)) +\n  geom_point(alpha = 1)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 23 rows containing missing values (geom_point).\n```\n:::\n\n::: {.cell-output-display}\n![](ae-02-viz-data-types-A_files/figure-html/starwars-color-size-1.png){width=672}\n:::\n:::\n\n\n## Step 5\n\nUse `facet_wrap` to display the association between mass and height for different values of `eye_color`. Note: Eye color needs to be in quotes because it is not directly mapped from our data set in `aes`thetic.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = starwars, \n       mapping = aes(x = height, y = mass)) +\n  geom_point() +\n  facet_wrap(\"eye_color\")\n```\n\n::: {.cell-output-display}\n![](ae-02-viz-data-types-A_files/figure-html/starwars-facet-1.png){width=672}\n:::\n:::\n\n\n## Step 6\n\nUse `facet_grid` to display the association between mass and height for different combinations of `eye_color` and `hair_color`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = starwars, \n       mapping = aes(x = height, y = mass)) +\n  geom_point() +\n  facet_grid(c(\"eye_color\", \"hair_color\"))\n```\n\n::: {.cell-output-display}\n![](ae-02-viz-data-types-A_files/figure-html/starwars-facet-grid-1.png){width=672}\n:::\n:::\n\n\n## Step 7\n\nUse `facet_grid` to display the association between mass and height for different combinations of `eye_color` and `hair_color` with the color based on `hair_color`. Add labels for the title, x and y axes, and the color.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = starwars, \n       mapping = aes(x = height, y = mass, color = hair_color))+\n  geom_point() +\n  facet_grid(c(\"eye_color\", \"hair_color\")) +\n    labs(x = \"Height (in inches)\", \n       y = \"Mass\", \n       title = \"Height \\nvs Mass\",\n       color = \"Hair Color\"\n       )\n```\n\n::: {.cell-output-display}\n![](ae-02-viz-data-types-A_files/figure-html/starwars-plot-final-1.png){width=672}\n:::\n:::\n\n\n## Optional (Try it on your own)\n\nSuppose now that you want to make a boxplot for the heights of all characters. What changes from the code above? Hint: Think about how many variables we are working with \\| Think about the type of plot we are making.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(starwars, \n       aes(x = height)) + \n       geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](ae-02-viz-data-types-A_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nCopy your code from the previous code chunk and add appropriate labels.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(starwars, \n       aes(x = height)) + \n       geom_boxplot() + \n       labs(title = \"Height of all Characters\")\n```\n\n::: {.cell-output-display}\n![](ae-02-viz-data-types-A_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nDoes height change based on the sex of the character? Create side-by-side boxplots to answer the question. Hint: Use group and fill in the `aes`thetic options.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = starwars, \n       mapping = aes(x = height , group = sex, fill = sex )) +\n  geom_boxplot(show.legend = T) \n```\n\n::: {.cell-output-display}\n![](ae-02-viz-data-types-A_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nYes. It looks like the relationship between height differs based on the character's sex. Character's with no sex seem to be much shorter than the others, while also having the most variability. \n\n## render, commit, and push\n\n1.  If you made any changes since the last render, render again to get the final version of the AE.\n\n2.  Check the box next to each document in the Git tab (this is called \"staging\" the changes). Commit the changes you made using an simple and informative message.\n\n3.  Use the **green arrow** to push your changes to your repo on GitHub.\n\n4.  Check your repo on GitHub and see the updated files. Once your updated files are in your repo on GitHub, you're good to go!\n",
    "supporting": [
      "ae-02-viz-data-types-A_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}