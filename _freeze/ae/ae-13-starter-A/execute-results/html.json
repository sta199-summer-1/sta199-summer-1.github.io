{
  "hash": "9c765e252ec43824fc5101afc1ffb138",
  "result": {
    "markdown": "---\ntitle: \"The Chronicle Analysis + Functions and Iteration\"\nformat: html\neditor: visual\n---\n\n\n#Warm Up\n\nTo convert temperatures in degrees Fahrenheit to Celsius, subtract 32 and multiply by .5556 (or 5/9). Write a function below to do this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nF_to_C <- function(temp_F){\n  \n  temp_C <- (temp_F - 32) * 5/9 \n  \n  return(temp_C)\n}\n\nF_to_C(75)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 23.88889\n```\n:::\n:::\n\n\n# Refresher\n\nIf needed, go to <https://www.dukechronicle.com/section/opinion>\n\n## Part 2 - Data analysis\n\nLet's start by loading the packages we will need:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(rvest)\nlibrary(lubridate)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nchronicle <- read_csv(\"data/chronicle.csv\")\n```\n:::\n\n\n-   **Your turn (3 minutes):** Who are the most prolific authors of the 100 most recent opinion articles in The Chronicle?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchronicle |> \n  count(author, sort = T)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 69 × 2\n   author                        n\n   <chr>                     <int>\n 1 Anthony Salgado               3\n 2 Billy Cao                     3\n 3 Community Editorial Board     3\n 4 Heidi Smith                   3\n 5 Linda Cao                     3\n 6 Luke A. Powery                3\n 7 Monday Monday                 3\n 8 Sonia Green                   3\n 9 Viktoria Wulff-Andersen       3\n10 Abdel Shehata                 2\n# … with 59 more rows\n```\n:::\n:::\n\n\n-   **Demo:** Draw a line plot of the number of opinion articles published per day in The Chronicle.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchronicle |>\n  count(date) |> \n  ggplot(\n    aes(x = date, y = n)) + \n  geom_line()\n```\n\n::: {.cell-output-display}\n![](ae-13-starter-A_files/figure-html/articles-per-day-1.png){width=672}\n:::\n:::\n\n\n-   **Demo:** What percent of the most recent 100 opinion articles in The Chronicle mention \"climate\" in their title?\n\n**Hint**: https://cran.r-project.org/web/packages/stringr/vignettes/stringr.html (Look at the Locale Sensitive section)\n\n**Hint**: Think about creating a new variable\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchronicle |>\n  mutate(\n    title = str_to_lower(title),\n    climate = if_else(str_detect(title, \"climate\"), \"mentioned\", \"not mentioned\")\n  ) |>\n  count(climate) |>\n  mutate(prop = n / sum(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 3\n  climate           n  prop\n  <chr>         <int> <dbl>\n1 mentioned         3  0.03\n2 not mentioned    97  0.97\n```\n:::\n:::\n\n\n-   **Together** What percent of the most recent 100 opinion articles in The Chronicle mention \"climate\" in their title or abstract?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchronicle |>\n  mutate(\n    title = str_to_lower(title),\n    abstract = str_to_lower(abstract),\n    climate = if_else(\n      \nstr_detect(title, \"climate\") | str_detect(abstract, \"climate\"),\n\"mentioned\" , \"not mentioned\")\n    \n) |>\n  count(climate) |>\n  mutate(prop = n / sum(n))\n```\n:::\n\n\n#Amazon Candle\n\n![](images/candle.png){fig-align=\"center\"} A researcher is interested in the manufacturing process of this candle. Specifically, they are interested in if it's potency has become less over time. In this exercise, our goal is to plot the number of reviews mentioning \"no scent\" or \"no smell\" per week. For the purpose of this exercise, *we will only use the first 10 pages of reviews.*\n\nGo to the link [here](https://www.amazon.com/Yankee-Candle-Large-Apple-Pumpkin/product-reviews/B008P8YTU6/ref=cm_cr_othr_d_show_all_btm?ie=UTF8&reviewerType=all_reviews)\n\nThink critically about how we would scrape the titles of the review, the review itself, and where/when the review was given from. Next, run the following code to do so below:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npage <- read_html(\"https://www.amazon.com/Yankee-Candle-Large-Apple-Pumpkin/product-reviews/B008P8YTU6/ref=cm_cr_getr_d_paging_btm_next_2?ie=UTF8&reviewerType=all_reviews&pageNumber=1&sortBy=recent\")\n\ntitles <- page |>\n  html_nodes(\"#cm_cr-review_list .celwidget .a-row:nth-child(2)\") |>\n  html_text2()\n\nreviews <- page |>\n  html_nodes(\".a-spacing-small.review-data\") |>\n  html_text2()\n\ncountries_dates <- page |>\n  html_nodes(\"#cm_cr-review_list .review-date\") |>\n  html_text2()\n  \n#Build data set\namazon <- tibble(\n  title = titles,\n  review = reviews,\n  country_date = countries_dates\n)\n```\n:::\n\n\n##Write function\n\n-- Why do we need a function?\n\n*Add your response here.*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nscrape_review <- function(url){\n  Sys.sleep(2)\n  \n  page <- read_html(url)\n  \ntitles <- page |>\n  html_nodes(\"#cm_cr-review_list .celwidget .a-row:nth-child(2)\") |>\n  html_text2()\n\nreviews <- page |>\n  html_nodes(\".a-spacing-small.review-data\") |>\n  html_text2()\n\ncountries_dates <- page |>\n  html_nodes(\"#cm_cr-review_list .review-date\") |>\n  html_text2()\n  \ntibble(\n  title = titles,\n  review = reviews,\n  country_date = countries_dates\n)\n\n}\n```\n:::\n\n\n##Test your function\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# page 1\nscrape_review(\"https://www.amazon.com/Yankee-Candle-Large-Apple-Pumpkin/product-reviews/B008P8YTU6/ref=cm_cr_getr_d_paging_btm_next_2?ie=UTF8&reviewerType=all_reviews&pageNumber=1&sortBy=recent\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 3\n   title                                                      review     count…¹\n   <chr>                                                      <chr>      <chr>  \n 1 5.0 out of 5 stars SMELLS GREAT                            This pump… \"Revie…\n 2 1.0 out of 5 stars Very little scent, not worth the price  What is i… \"Revie…\n 3 3.0 out of 5 stars Arrived with glass smashed              I have or… \"Revie…\n 4 5.0 out of 5 stars Amazing value                           I love ya… \"Revie…\n 5 1.0 out of 5 stars Not stored properly; melted             I ordered… \"Revie…\n 6 1.0 out of 5 stars NO SMELL!! VERY DISSATISFIED!!          Used it f… \"Revie…\n 7 1.0 out of 5 stars BUYER BEWARE/ THIS IS NOT YANKEE CANDLE I bought … \"Revie…\n 8 1.0 out of 5 stars zero scent                              this is n… \"Revie…\n 9 2.0 out of 5 stars Disappointed                            I love th… \"Revie…\n10 2.0 out of 5 stars Arrived melted                          The candl… \"Revie…\n# … with abbreviated variable name ¹​country_date\n```\n:::\n\n```{.r .cell-code}\n# page 2\nscrape_review(\"https://www.amazon.com/Yankee-Candle-Large-Apple-Pumpkin/product-reviews/B008P8YTU6/ref=cm_cr_getr_d_paging_btm_next_2?ie=UTF8&reviewerType=all_reviews&pageNumber=2&sortBy=recent\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 3\n   title                                                          review count…¹\n   <chr>                                                          <chr>  <chr>  \n 1 5.0 out of 5 stars SMELLS GOOD!                                I don… \"Revie…\n 2 1.0 out of 5 stars Cannot be used : melted when arrived        Likel… \"Revie…\n 3 1.0 out of 5 stars Not a Yankees Candle                        There… \"Revie…\n 4 1.0 out of 5 stars No scent whatsoever                         I sup… \"Revie…\n 5 5.0 out of 5 stars Wonderful candle                            Got t… \"Revie…\n 6 1.0 out of 5 stars I really wanted to like it, but…            It tu… \"Revie…\n 7 4.0 out of 5 stars Smells good.                                Would… \"Revie…\n 8 5.0 out of 5 stars Damaged                                     Candl… \"Revie…\n 9 1.0 out of 5 stars Wrong Scent Wood wick candle!! False adver… I don… \"Revie…\n10 5.0 out of 5 stars Good scent                                  Smell… \"Revie…\n# … with abbreviated variable name ¹​country_date\n```\n:::\n\n```{.r .cell-code}\n# page 3\nscrape_review(\"https://www.amazon.com/Yankee-Candle-Large-Apple-Pumpkin/product-reviews/B008P8YTU6/ref=cm_cr_getr_d_paging_btm_next_2?ie=UTF8&reviewerType=all_reviews&pageNumber=3&sortBy=recent\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 3\n   title                                                          review count…¹\n   <chr>                                                          <chr>  <chr>  \n 1 4.0 out of 5 stars Average candle                              \"This… Review…\n 2 5.0 out of 5 stars A Softer and Warmer scent than you might e… \"The … Review…\n 3 2.0 out of 5 stars Barely has any scent                        \"I'd … Review…\n 4 1.0 out of 5 stars No emana ningún olor                        \"Esta… Review…\n 5 5.0 out of 5 stars Nice scent last long nice to give as a Chr… \"Gift… Review…\n 6 4.0 out of 5 stars Smell wasn't strong                         \"Scen… Review…\n 7 5.0 out of 5 stars Beautiful!                                  \"I've… Review…\n 8 1.0 out of 5 stars Came ruined                                 \"Melt… Review…\n 9 5.0 out of 5 stars This is the only one buy                    \"Make… Review…\n10 5.0 out of 5 stars Can't go wrong with a classic!              \"I lo… Review…\n# … with abbreviated variable name ¹​country_date\n```\n:::\n:::\n\n\n-- What changes across URLs?\n\n*Add your response here.*\n\nYou can use the paste() and paste0() functions in R to concatenate elements of a vector into a single string. The paste0() function concatenates strings using no space as the default separator.\n\nUse this information to create a list of urls for the first 10 pages of the amazon review.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyc_urls <- paste0(\"https://www.amazon.com/Yankee-Candle-Large-Apple-Pumpkin/product-reviews/B008P8YTU6/ref=cm_cr_getr_d_paging_btm_next_2?ie=UTF8&reviewerType=all_reviews&pageNumber=\", 1:10, \"&sortBy=recent\" )\n```\n:::\n\n\nWe have a function. We have a lot of urls. How do we iterate?\n\n*Add your response here.*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyc_reviews_all <- map_dfr(yc_urls , scrape_review)\n```\n:::\n\n\nWe have the data! Let's clean it up. We need to get the date in working order and createad week variable. We also need to create a variable that detects if \"no scent\" or \"no smell\" is mentioned.\n\nBelow, document what each line of code is doing.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyc_reviews <- yc_reviews_all |>\n  mutate(\n    date = mdy(country_date), \n    week = week(date), \n    review = str_to_lower(review),\n    title = str_to_lower(title),\n    no_scent = case_when(\n      str_detect(review, \"no scent\") | str_detect(title, \"no scent\") ~ \"mentioned\",\n      str_detect(review, \"no smell\") | str_detect(title, \"no smell\") ~ \"mentioned\",\n      TRUE ~ \"not mentioned\"\n    )\n  )\n```\n:::\n\n\nUsing the code above, make a line graph by week for the number of reviews that contained \"no scent\" or \"no smell\".\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add-code-here\n```\n:::\n\n\n-   **Your turn (3 minutes):** Outline how this exercise could be expanded to make a plot like [this one](https://twitter.com/nick_beauchamp/status/1473509106187223043) that compares number of reviews mentioning no scent/smell and number of COVID cases.\n\n*Add your response here.*\n",
    "supporting": [
      "ae-13-starter-A_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}