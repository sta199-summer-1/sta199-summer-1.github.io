{
  "hash": "cf5bf30fd0a700e401822c33f5703ccf",
  "result": {
    "markdown": "---\ntitle: \"Regression Review\"\nformat: html\neditor: visual\n---\n\n\nIn this application exercise we will be studying loan interest rates. The dataset is one you've come across before in your reading -- the dataset about loans from the peer-to-peer lender, Lending Club, from the **openintro** package. We will use **tidyverse** and **tidymodels** for data exploration and modeling, respectively.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(openintro)\n```\n:::\n\n\nBefore we use the data set, we'll make a few transformations to it.\n\nWarm up: What is this code doing?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nloans <- loans_full_schema %>% # Old data set\n  mutate(\n    credit_util = total_credit_utilized / total_credit_limit, #New var\n    bankruptcy  = as.factor(if_else(public_record_bankrupt == 0, 0, 1)),\n    verified_income = droplevels(verified_income),\n    homeownership = str_to_title(homeownership),\n    homeownership = fct_relevel(homeownership, \"Rent\", \"Mortgage\", \"Own\")\n    ) %>%\n  rename(credit_checks = inquiries_last_12m) %>%\n  select(interest_rate, verified_income, debt_to_income, credit_util, bankruptcy, term, credit_checks, issue_month, homeownership) \n```\n:::\n\n\nTake a glimpse of the data below:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(loans)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 10,000\nColumns: 9\n$ interest_rate   <dbl> 14.07, 12.61, 17.09, 6.72, 14.07, 6.72, 13.59, 11.99, …\n$ verified_income <fct> Verified, Not Verified, Source Verified, Not Verified,…\n$ debt_to_income  <dbl> 18.01, 5.04, 21.15, 10.16, 57.96, 6.46, 23.66, 16.19, …\n$ credit_util     <dbl> 0.54759517, 0.15003472, 0.66134832, 0.19673228, 0.7549…\n$ bankruptcy      <fct> 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, …\n$ term            <dbl> 60, 36, 36, 36, 36, 36, 60, 60, 36, 36, 60, 60, 36, 60…\n$ credit_checks   <int> 6, 1, 4, 0, 7, 6, 1, 1, 3, 0, 4, 4, 8, 6, 0, 0, 4, 6, …\n$ issue_month     <fct> Mar-2018, Feb-2018, Feb-2018, Jan-2018, Mar-2018, Jan-…\n$ homeownership   <fct> Mortgage, Rent, Rent, Rent, Rent, Own, Mortgage, Mortg…\n```\n:::\n:::\n\n\n# Interest rate vs. credit utilization ratio\n\nWrite a model that models interest rate by credit utilization ratio. Name it `rate_util_fit`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrate_util_fit <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(interest_rate ~ credit_util, data = loans) \n  \ntidy(rate_util_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 5\n  term        estimate std.error statistic   p.value\n  <chr>          <dbl>     <dbl>     <dbl>     <dbl>\n1 (Intercept)    10.5     0.0871     121.  0        \n2 credit_util     4.73    0.180       26.3 1.18e-147\n```\n:::\n:::\n\n\nAnd here is the model visualized:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans, aes(x = credit_util, y = interest_rate)) +\n  geom_point(alpha = 0.5) +\n  geom_smooth(method = \"lm\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula 'y ~ x'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing non-finite values (stat_smooth).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values (geom_point).\n```\n:::\n\n::: {.cell-output-display}\n![](ae-17-A_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n-   **Your turn:** What is the estimated interest rate for a loan applicant with credit utilization of 0.8, i.e. someone whose total credit balance is 80% of their total available credit?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Make new data \n\ncredit_util_80 <- tibble(credit_util = 0.8)\n\n# Predict with it\n\npredict(rate_util_fit, new_data = credit_util_80)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n  .pred\n  <dbl>\n1  14.3\n```\n:::\n:::\n\n\n# Leverage vs Influence\n\nWhat is leverage? What is influence?\n\nLeverage - How far away an observation is from the line (High, Low) \"Potential for influence\"\n\nInfluence - Does the observation change the line?\n\nNow, let's add data points to drive this idea home!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnew_point_1 <- data.frame(100, NA, NA, 0.8, NA,  NA, NA, NA, NA)\nnames(new_point_1) <- names(loans)\n\nnew_point_2 <- data.frame(100, NA, NA, 4, NA,  NA, NA, NA, NA)\nnames(new_point_2) <- names(loans)\n\n\nnew_loans1 <- rbind(loans, new_point_1)\n\nnew_loans2 <- rbind(loans, new_point_2)\n```\n:::\n\n\nBelow, compare the model outputs.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlinear_reg() |>\n  set_engine(\"lm\") |>\n  fit(interest_rate ~ credit_util, data = loans) |> #Change data to loans\n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 5\n  term        estimate std.error statistic   p.value\n  <chr>          <dbl>     <dbl>     <dbl>     <dbl>\n1 (Intercept)    10.5     0.0871     121.  0        \n2 credit_util     4.73    0.180       26.3 1.18e-147\n```\n:::\n\n```{.r .cell-code}\nlinear_reg() |>\n  set_engine(\"lm\") |>\n  fit(interest_rate ~ credit_util, data = new_loans1) |>\n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 5\n  term        estimate std.error statistic   p.value\n  <chr>          <dbl>     <dbl>     <dbl>     <dbl>\n1 (Intercept)    10.5     0.0884     119.  0        \n2 credit_util     4.77    0.182       26.2 3.94e-146\n```\n:::\n\n```{.r .cell-code}\nlinear_reg() |>\n  set_engine(\"lm\") |>\n  fit(interest_rate ~ credit_util, data = new_loans2) |>\n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 5\n  term        estimate std.error statistic   p.value\n  <chr>          <dbl>     <dbl>     <dbl>     <dbl>\n1 (Intercept)    10.4     0.0875     119.  0        \n2 credit_util     5.07    0.180       28.2 2.54e-168\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(new_loans2, aes(x = credit_util, y = interest_rate)) +\n  geom_point(alpha = 0.5) +\n  geom_smooth(method = \"lm\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula 'y ~ x'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing non-finite values (stat_smooth).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values (geom_point).\n```\n:::\n\n::: {.cell-output-display}\n![](ae-17-A_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n**Model 3 had its slope change dramatically because of the high leverage point with a large x-value and large y-value. The slope did not change in model 2 very much compared to model 1**\n\n# Interest rate vs. homeownership\n\nNext lets predict interest rates from homeownership, which is a categorical predictor with three levels:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlevels(loans$homeownership)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Rent\"     \"Mortgage\" \"Own\"     \n```\n:::\n:::\n\n\n-   **Demo:** Fit the linear regression model to predict interest rate from homeownership and display a tidy summary of the model. Write the estimated model output below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrate_util_home_fit <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(interest_rate ~ homeownership, data = loans)\n\ntidy(rate_util_home_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 5\n  term                  estimate std.error statistic  p.value\n  <chr>                    <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)             12.9      0.0803    161.   0       \n2 homeownershipMortgage   -0.866    0.108      -8.03 1.08e-15\n3 homeownershipOwn        -0.611    0.158      -3.88 1.06e- 4\n```\n:::\n:::\n\n\n-   **Your turn:** Interpret each coefficient in context of the problem.\n\n    -   Intercept: On average, the estimated interest rate for a house being rented is 12.9 percent.\n\n    -   Slopes:\n\n        -   On average, the estimated interest rate for a mortgage is 12.9 - 0.866 percent.\n\n        -   On average, the estimated interest rate for a owned home is 12.9 - 0.611 percent.\n\n# Interest rate vs. credit utilization and homeownership\n\n## Main effects model\n\n-   **Demo:** Fit a model to predict interest rate from credit utilization and homeownership, **without** an interaction effect between the two predictors. Display the summary output and write out the estimated regression equation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrate_util_home_fit <- linear_reg() |>\n  fit(interest_rate ~ credit_util + homeownership, data = loans)\ntidy(rate_util_home_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 5\n  term                  estimate std.error statistic   p.value\n  <chr>                    <dbl>     <dbl>     <dbl>     <dbl>\n1 (Intercept)              9.93      0.140    70.8   0        \n2 credit_util              5.34      0.207    25.7   2.20e-141\n3 homeownershipMortgage    0.696     0.121     5.76  8.71e-  9\n4 homeownershipOwn         0.128     0.155     0.827 4.08e-  1\n```\n:::\n:::\n\n$$\n\n\\widehat{interest-rate} = 9.93 + 5.34 \\times credit-util + 0.696*Mortgage + 0.128*Own \\\\\n\nMortage = 1 if Mortage; 0 else \\\\ Own = 1 if Own; 0 else\n\n$$\n\n\n-   **Demo:** Write the estimated regression equation for loan applications from each of the homeownership groups separately.\n    -   Rent: $ \\widehat{interest-rate} = 9.93 + 5.34 \\times credit-util \\\\ $\n    -   Mortgage: $ \\widehat{interest-rate} = 9.93 + 5.34 \\times credit-util + 0.696\\*(1) \\\\ $\n    -   Own: $ \\widehat{interest-rate} = 9.93 + 5.34 \\times credit-util + 0.128\\*(1) \\\\ $\n-   **Question:** How does the model predict the interest rate to vary as credit utilization varies for loan applicants with different homeownership status. Are the rates the same or different?\n\n**The Same**\n\n## Interaction effects model\n\n-   **Demo:** Fit a model to predict interest rate from credit utilization and homeownership, **with** an interaction effect between the two predictors. Display the summary output and write out the estimated regression equation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrate_util_home_int_fit <- linear_reg() |>\n  set_engine(\"lm\") |> \n  fit(interest_rate ~ homeownership*credit_util, data = loans)\n  \n  tidy(rate_util_home_int_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n  term                              estimate std.error statistic  p.value\n  <chr>                                <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)                          9.44      0.199     47.5  0       \n2 homeownershipMortgage                1.39      0.228      6.11 1.04e- 9\n3 homeownershipOwn                     0.697     0.316      2.20 2.75e- 2\n4 credit_util                          6.20      0.325     19.1  1.01e-79\n5 homeownershipMortgage:credit_util   -1.64      0.457     -3.58 3.49e- 4\n6 homeownershipOwn:credit_util        -1.06      0.590     -1.80 7.24e- 2\n```\n:::\n:::\n\n$$\n\\widehat{interest~rat\ne} = 9.44 + 6.20 \\times credit\\_util + 1.39 \\times Mortgage + 0.697 \\times Own - 1.64 \\times credit\\_util:Mortgage - 1.06 \\times credit\\_util:Own\n$$\n\n\n-   **Demo:** Write the estimated regression equation for loan applications from each of the homeownership groups separately.\n    -   Rent: $\\widehat{interest~rate} = 9.44 + 6.20 \\times credit~util$\n    -   Mortgage: $\\widehat{interest~rate} = 10.83 + 4.56 \\times credit~util$\n    -   Own: $\\widehat{interest~rate} = 10.137 + 5.14 \\times credit~util$\n-   **Question:** How does the model predict the interest rate to vary as credit utilization varies for loan applicants with different homeownership status. Are the rates the same or different?\n\n**They are different**\n\n## Choosing a model\n\nRule of thumb: **Occam's Razor** - Don't overcomplicate the situation! We prefer the *simplest* best model.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglance(rate_util_home_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 12\n  r.squared adj.r.…¹ sigma stati…²   p.value    df  logLik    AIC    BIC devia…³\n      <dbl>    <dbl> <dbl>   <dbl>     <dbl> <dbl>   <dbl>  <dbl>  <dbl>   <dbl>\n1    0.0682   0.0679  4.83    244. 1.25e-152     3 -29926. 59861. 59897. 232954.\n# … with 2 more variables: df.residual <int>, nobs <int>, and abbreviated\n#   variable names ¹​adj.r.squared, ²​statistic, ³​deviance\n```\n:::\n\n```{.r .cell-code}\nglance(rate_util_home_int_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 12\n  r.squared adj.r.…¹ sigma stati…²   p.value    df  logLik    AIC    BIC devia…³\n      <dbl>    <dbl> <dbl>   <dbl>     <dbl> <dbl>   <dbl>  <dbl>  <dbl>   <dbl>\n1    0.0694   0.0689  4.83    149. 4.79e-153     5 -29919. 59852. 59903. 232652.\n# … with 2 more variables: df.residual <int>, nobs <int>, and abbreviated\n#   variable names ¹​adj.r.squared, ²​statistic, ³​deviance\n```\n:::\n:::\n\n\n-   **Review:** What is R-squared? What is adjusted R-squared?\n\nR-squared is the amount of variability in our response that is explained by our model\n\nAdjusted R-squared is similar, but has an additional penalty for the number of variables in the model.\n\n-   **Question:** Based on the $R^2s$ of these two models, which one do we prefer? Is this appropriate?\n\n-   **Question:** Based on the adjusted $R^2$s of these two models, which one do we prefer?\n\nNote: We can use the principles of adjusted R-squared to select models using forwards or backwards selection (Read 8.4.1)\n\n# Another model to consider\n\n-   **Your turn:** Let's add one more model to the variable -- issue month. Should we add this variable to the interaction effects model from earlier?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlinear_reg() |>\n  fit(interest_rate ~ credit_util * homeownership + issue_month, data = loans) |>\n  glance()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 12\n  r.squared adj.r.…¹ sigma stati…²   p.value    df  logLik    AIC    BIC devia…³\n      <dbl>    <dbl> <dbl>   <dbl>     <dbl> <dbl>   <dbl>  <dbl>  <dbl>   <dbl>\n1    0.0694   0.0688  4.83    106. 5.62e-151     7 -29919. 59856. 59921. 232641.\n# … with 2 more variables: df.residual <int>, nobs <int>, and abbreviated\n#   variable names ¹​adj.r.squared, ²​statistic, ³​deviance\n```\n:::\n:::\n\n\n**No, the adjusted R-squared went slightly down**\n\n# Optional\n\n## 2 Quantitative Explanatory Variables\n\nRemember the penguins? Let's finish the activity.\n\nNow, let's explore body mass, and it's relationship to bill length and flipper length.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(palmerpenguins)\nlibrary(plotly)\nlibrary(widgetframe)\n```\n:::\n\n\nNote: This code is beyond the scope of this course!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nquanplot <- plot_ly(penguins, \n                    x = ~ flipper_length_mm, y = ~ bill_length_mm, z = ~body_mass_g,\n                    marker = list(size = 3, color = \"lightgray\" , alpha = 0.5, \n                                  line = list(color = \"gray\" , width = 2))) |>\n                      add_markers() |>\n                      plotly::layout(scene = list(\n                        xaxis = list(title = \"Flipper (mm)\"),\n                        yaxis = list(title = \"Bill (mm)\"), \n                        zaxis = list(title = \"Body Mass (g)\")\n                      )) |>\n                    config(displayModeBar = FALSE)\n                  frameWidget(quanplot)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Ignoring 2 observations\n```\n:::\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-52a29b627d99ee0d3882\" style=\"width:100%;height:480px;\" class=\"widgetframe html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-52a29b627d99ee0d3882\">{\"x\":{\"url\":\"ae-17-A_files/figure-html//widgets/widget_unnamed-chunk-17.html\",\"options\":{\"xdomain\":\"*\",\"allowfullscreen\":false,\"lazyload\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n-- Fit the additive model below. Interpret the coefficient for flipper in context of the problem.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlinear_reg() |>\n  set_engine(\"lm\") |>\n  fit(body_mass_g ~ bill_length_mm * flipper_length_mm , data = penguins) |>\n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 5\n  term                             estimate std.error statistic  p.value\n  <chr>                               <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)                       5091.    2925.        1.74  0.0827  \n2 bill_length_mm                    -229.      63.4      -3.61  0.000347\n3 flipper_length_mm                   -7.31    15.0      -0.486 0.627   \n4 bill_length_mm:flipper_length_mm     1.20     0.322     3.72  0.000232\n```\n:::\n:::\n\n$$\n\n\\widehat{body-mass} = -5737 + 6.05*bill + 48.1*flipper\n\n$$\n\n\nHolding bill length constant, for a one mm increase in flipper length, we expect on average a 48.1 increase in body mass grams.\n\nWhat if I want to fit an interaction model with these two quantitative variables?\n\nIt looks really similar to what we've done before! Try it out!\n",
    "supporting": [
      "ae-17-A_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/htmlwidgets-1.5.4/htmlwidgets.js\"></script>\r\n<script src=\"../site_libs/pymjs-1.3.2/pym.v1.js\"></script>\r\n<script src=\"../site_libs/widgetframe-binding-0.3.1/widgetframe.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}