{
  "hash": "3781bb7199abc794ace53f62795126a9",
  "result": {
    "markdown": "---\ntitle: \"Workflow and Formatting\"\nauthor: \"STA199 TA team\"\nformat: html\neditor: visual\n---\n\n\n### Rubrics for workflow and formatting\n\nBreakdown of overall workflow and formatting grading listed below:\n\n-   1 pts: 1 point given if all *code chunks are appropriately labelled*\n    -   take off 0.5 pt if anything less\n    -   take off 1 pt if none of the code chunks are appropriately labelled\n-   3 pts: Consistent code style.\n-   1 point given if narrative and text does not exceed the 80 character limit.\n-   1 point given for consistent use of operators (i.e. %\\>% or \\|\\> and \\<- or = but not both)\n-   1 point given for consistent and appropriate use of spacing (i.e. pipes and layers followed by newline and binary operators like + and - are surrounded by spaces)\n-   1 pt: author name updated to the student's name at the YAML (at the top) of the document.\n\n### Common Mistakes\n\n#### 1. meaningless labels\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0     ✔ purrr   0.3.5\n✔ tibble  3.1.8     ✔ dplyr   1.0.9\n✔ tidyr   1.2.1     ✔ stringr 1.4.1\n✔ readr   2.1.3     ✔ forcats 0.5.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggplot2' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tidyr' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'readr' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'purrr' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\niris |>\n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 150\nColumns: 5\n$ Sepal.Length <dbl> 5.1, 4.9, 4.7, 4.6, 5.0, 5.4, 4.6, 5.0, 4.4, 4.9, 5.4, 4.…\n$ Sepal.Width  <dbl> 3.5, 3.0, 3.2, 3.1, 3.6, 3.9, 3.4, 3.4, 2.9, 3.1, 3.7, 3.…\n$ Petal.Length <dbl> 1.4, 1.4, 1.3, 1.5, 1.4, 1.7, 1.4, 1.5, 1.4, 1.5, 1.5, 1.…\n$ Petal.Width  <dbl> 0.2, 0.2, 0.2, 0.2, 0.2, 0.4, 0.3, 0.2, 0.2, 0.1, 0.2, 0.…\n$ Species      <fct> setosa, setosa, setosa, setosa, setosa, setosa, setosa, s…\n```\n:::\n:::\n\n\nSome good examples\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris |>\n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 150\nColumns: 5\n$ Sepal.Length <dbl> 5.1, 4.9, 4.7, 4.6, 5.0, 5.4, 4.6, 5.0, 4.4, 4.9, 5.4, 4.…\n$ Sepal.Width  <dbl> 3.5, 3.0, 3.2, 3.1, 3.6, 3.9, 3.4, 3.4, 2.9, 3.1, 3.7, 3.…\n$ Petal.Length <dbl> 1.4, 1.4, 1.3, 1.5, 1.4, 1.7, 1.4, 1.5, 1.4, 1.5, 1.5, 1.…\n$ Petal.Width  <dbl> 0.2, 0.2, 0.2, 0.2, 0.2, 0.4, 0.3, 0.2, 0.2, 0.1, 0.2, 0.…\n$ Species      <fct> setosa, setosa, setosa, setosa, setosa, setosa, setosa, s…\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\niris |>\n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 150\nColumns: 5\n$ Sepal.Length <dbl> 5.1, 4.9, 4.7, 4.6, 5.0, 5.4, 4.6, 5.0, 4.4, 4.9, 5.4, 4.…\n$ Sepal.Width  <dbl> 3.5, 3.0, 3.2, 3.1, 3.6, 3.9, 3.4, 3.4, 2.9, 3.1, 3.7, 3.…\n$ Petal.Length <dbl> 1.4, 1.4, 1.3, 1.5, 1.4, 1.7, 1.4, 1.5, 1.4, 1.5, 1.5, 1.…\n$ Petal.Width  <dbl> 0.2, 0.2, 0.2, 0.2, 0.2, 0.4, 0.3, 0.2, 0.2, 0.1, 0.2, 0.…\n$ Species      <fct> setosa, setosa, setosa, setosa, setosa, setosa, setosa, s…\n```\n:::\n:::\n\n\nIf you have multiple models or plots for the homework/labs, you can number them.\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris_sum <- iris |>\n  as_tibble() |>\n  lm(formula = Petal.Width ~ Sepal.Width) |>\n  summary()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\niris_boxplot <- iris |>\n  as_tibble() |>\n  ggplot(aes(y = Petal.Width, x = Species)) + geom_boxplot()\n```\n:::\n\n\n#### 2. Inconsistent use of operator\n\nBad examples: use both %\\>% and \\|\\>, both \\<- and = in the homework/lab.\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris_boxplot <- iris |>\n  as_tibble() %>%\n  ggplot(aes(y = Petal.Width, x = Species)) + \n  geom_boxplot()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\niris_tbl <- iris |>\n  as_tibble()\niris_boxplot = ggplot(iris_tbl, aes(y = Petal.Width, x = Species)) + \n  geom_boxplot()\n```\n:::\n\n\nGood examples:\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris_boxplot <- iris |>\n  as_tibble() |>\n  ggplot(aes(y = Petal.Width, x = Species)) + \n  geom_boxplot()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\niris_tbl <- iris |>\n  as_tibble()\niris_boxplot <- ggplot(iris_tbl, aes(y = Petal.Width, x = Species)) + \n  geom_boxplot()\n```\n:::\n\n\n#### 3. Narrative and text exceeding character limit\n\nBad examples: text overflow. Only part of the text will appear in both coding part and plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris |>\n  as_tibble() |>\n  ggplot(aes(y = Petal.Width, x = Species)) + \n  geom_boxplot() +\n  labs(title = \"The title is super long and exceeds the word limits. Please do not take my points off.\")\n```\n\n::: {.cell-output-display}\n![](workflow_formatting_files/figure-html/bad-txt-1-1.png){width=672}\n:::\n:::\n\n\nPossible solutions: have a new line inside your code or have subtitle. It is always a good idea to do proofreading on your knitted pdf file.\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris |>\n  as_tibble() |>\n  ggplot(aes(y = Petal.Width, x = Species)) + \n  geom_boxplot() +\n  labs(title = \"The title is super long and exceeds the word limits.\n       Please do not take my points off.\")\n```\n\n::: {.cell-output-display}\n![](workflow_formatting_files/figure-html/good-txt-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\niris |>\n  as_tibble() |>\n  ggplot(aes(y = Petal.Width, x = Species)) + \n  geom_boxplot() +\n  labs(title = \"The title is super long and exceeds the word limits.\",\n       subtitle = \"Please do not take my points off.\")\n```\n\n::: {.cell-output-display}\n![](workflow_formatting_files/figure-html/good-txt-1-2.png){width=672}\n:::\n:::\n\n\nBad examples: text overflow when the functions have a lot of arguments needed specification\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris_boxplot <- iris |>\n  as_tibble() |>\n  ggplot(aes(y = Petal.Width, x = Species, fill = Species)) + \n  geom_boxplot() +\n  labs(title = \"Boxplot for petal width versus species\", x = \"species\", y = \"petal width\", fill = \"species\")\n```\n:::\n\n\nA solution: represent them in separate lines\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris_boxplot <- iris |>\n  as_tibble() |>\n  ggplot(aes(y = Petal.Width, x = Species, fill = Species)) + \n  geom_boxplot() +\n  labs(title = \"Boxplot for petal width versus species\", \n       x = \"species\", \n       y = \"petal width\", \n       fill = \"species\")\n```\n:::\n\n\n#### 4. Inappropriate use of spacing\n\nBad example: +/-/=/\\</\\| are not surrounded by spaces\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris_boxplot<-iris|>\n  as_tibble()|>\n  ggplot(aes(y=Petal.Width, x=Species, fill=Species))+ \n  geom_boxplot() \n```\n:::\n\n\nGood example:\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris_boxplot <- iris |>\n  as_tibble() |>\n  ggplot(aes(y = Petal.Width, x = Species, fill = Species)) + \n  geom_boxplot() \n```\n:::\n\n\n#### 5. New layer/pipline not begin with a newline\n\nThe code should be in a newline if it is a new function, such as pipeline, ggplot layers, model fitting.\n\nBad examples:\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris_boxplot <- iris |> as_tibble() |>\n  ggplot(aes(y = Petal.Width, x = Species)) + \n  geom_boxplot() \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\niris_boxplot <- iris |> \n  as_tibble() |>\n  ggplot(aes(y = Petal.Width, x = Species)) + geom_boxplot() \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\niris_boxplot <- iris |> \n  as_tibble() |>\n  ggplot(aes(y = Petal.Width, x = Species)) + \n  geom_boxplot() + ggtitle(\"Boxplot for width versus species\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\niris_sum <- iris |>\n  as_tibble() |>\n  lm(formula = Petal.Width ~ Sepal.Width) |> summary()\n```\n:::\n\n\nGood examples\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris_boxplot <- iris |> \n  as_tibble() |>\n  ggplot(aes(y = Petal.Width, x = Species)) + \n  geom_boxplot() + \n  ggtitle(\"Boxplot for width versus species\")\n```\n:::\n",
    "supporting": [
      "workflow_formatting_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}