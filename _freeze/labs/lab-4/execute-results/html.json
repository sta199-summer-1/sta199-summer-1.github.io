{
  "hash": "6f80cf9d5a38bc6ce4e3bb522649ed15",
  "result": {
    "markdown": "---\ntitle: \"Lab 4 - Predicting a numerical outcome\"\ncategories: \"Lab\"\nexecute:\n  eval: true\n---\n\n\n::: callout-important\nThis lab is due Thursday, June 8th at 11:59pm.\n:::\n\n# Learning Goals\n\n-   Use tidymodels framework to build a linear model and estimate regression parameters\n\n-   Visualize your linear model\n\n## Intro\n\nParasites can cause infectious disease -- but not all animals are affected by the same parasites. Some parasites are present in a multitude of species and others are confined to a single host. It is hypothesized that closely related hosts are more likely to share the same parasites. More specifically, it is thought that closely related hosts will live in similar environments and have similar genetic makeup that coincides with optimal conditions for the same parasite to flourish.\n\nIn this lab we will see how much evolutionary history predicts parasite similarity.\n\n## The Data\n\nToday's dataset comes from an Ecology Letters paper by Cooper at al. (2012) *\"Phylogenetic host specificity and understanding parasite sharing in primates\"* which can be found [here](https://onlinelibrary.wiley.com/doi/10.1111/j.1461-0248.2012.01858.x). The goal of the paper was to identify the ability of evolutionary history and ecological traits to characterize parasite host specificity.\n\nEach row of the data contains two species, `species1` and `species2`.\n\nSubsequent columns describe metrics that compare the species:\n\n-   `divergence_time`: how many (millions) of years ago the two species diverged. i.e. how many million years ago they were the same species.\n\n-   `distance`: geodesic distance between species geographic range centroids (in kilometers)\n\n-   `BMdiff`: difference in body mass between the two species (in grams)\n\n-   `precdiff`: difference in mean annual precipitation across the two species geographic ranges (mm)\n\n-   `parsim`: a measure of parasite similarity (proportion of parasites shared between species, ranges from 0 to 1.)\n\nThe data are available in `parasites.csv` in the data folder.\n\n## Packages\n\nWe'll use the **tidyverse** package for much of the data wrangling and visualization.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggplot2' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tidyr' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'readr' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'purrr' was built under R version 4.2.2\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidymodels)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'broom' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'dials' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'parsnip' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'recipes' was built under R version 4.2.2\n```\n:::\n:::\n\n\n## Exercises\n\n::: callout-important\nPick another member of the team write the answer to Exercise 1. All others should contribute to the discussion but only one person should type up the answer, render the document, commit, and push to GitHub. All others should **not** touch the document.\n:::\n\nTo get started, load the data and save the data frame as `parasites`.\n\n1.  Let's start by examining the relationship between `divergence_time` and `parsim`.\n    a.  Based on the goals of the analysis, what is the response variable?\n\n    b.  Visualize the relationship between the two variables.\n\n    c.  Use the visualization to describe the relationship between the two variables.\n\n::: callout-important\nAfter the team member working on Exercise 1 renders, commits, and pushes, another team member should pull their changes and render the document. Then, they should write the answer to Exercise 2. All others should contribute to the discussion but only one person should type up the answer, render the document, commit, and push to GitHub. All others should **not** touch the document.\n:::\n\n2.  Next, we'll model this relationship.\n\n    a.  Fit the model and write the estimated regression equation.\n\n    b.  Interpret the slope and the intercept in the context of the data.\n\n    c.  Recreate the visualization from Exercise 1, this time adding a regression line to the visualization.\n\n    d.  What do you notice about the prediction (regression) line that may be strange, particularly for very large divergence times?\n\n::: callout-important\nAfter the team member working on Exercise 2 renders, commits, and pushes, another team member should pull their changes and render the document. Then, they should write the answer to Exercise 3. All others should contribute to the discussion but only one person should type up the answer, render the document, commit, and push to GitHub. All others should **not** touch the document.\n:::\n\n3.  Since `parsim` takes values between 0 and 1, we want to transform this variable so that it can range between (−∞,+∞). This will be better suited for fitting a regression model (and interpreting predicted values!)\n\n    a.  Using mutate, create a new variable `transformed_parsim` that is calculated as `log(parsim/(1-parsim))`. Add this variable to your data frame. Note: `log()` in R represents taking the **nautral log**.\n\n    b.  Then, visualize the relationship between divergence_time and `transformed_parsim`. Add a regression line to your visualization.\n\n    c.  Write a 1-2 sentence description of what you observe in the visualization.\n\n::: callout-important\nAfter the team member working on Exercise 3 renders, commits, and pushes, another team member should pull their changes and render the document. Then, they should write the answer to Exercise 4. All others should contribute to the discussion but only one person should type up the answer, render the document, commit, and push to GitHub. All others should **not** touch the document.\n:::\n\n4.  *Which variable is the strongest individual predictor of parasite similarity between species?* To answer this question, begin by fitting separate linear regression models predicting `transformed_parsim` with each of the following predictor variables:\n\n    -   `divergence_time`\n\n    -   `distance`\n\n    -   `BMdiff`\n\n    -   `precdiff`\n\nDo not report the model outputs in a tidy format but save each one as `dt_model`, `dist_model`, `BM_model`, and `prec_model`, respectively. Then,\n\na.  Report the slopes for each of these models. Use proper notation.\n\nb.  To answer the question of interest, would it be useful to compare the slopes in each model to choose the variable that is the strongest predictor of parasite similarity? Why or why not?\n\n::: callout-important\nAfter the team member working on Exercise 4 renders, commits, and pushes, another team member should pull their changes and render the document. Then, they should write the answer to Exercise 5. All others should contribute to the discussion but only one person should type up the answer, render the document, commit, and push to GitHub. All others should **not** touch the document.\n:::\n\n5.  Regardless of your answer to exercise 4b, we will also calculate the $R^2$ of each model to help us identify the strongest individual linear predictor of `transformed_parsim`. $R^2$ measures the percent of the variability in the response that is explained by the model.\n\nAs you may have guessed from the name, $R^2$ can be calculated by squaring the correlation when we have a simple linear regression model. The correlation, r, takes values between -1 and 1, so $R^2$ takes a value between 0 and 1. Intuitively, if r=1 or −1, then $R^2$=1, indicating the model perfectly fits the data. If r≈0 then $R^2$≈0, indicating the model is a very bad fit for the data.\n\nYou can calculate $R^2$ using the glance function. For example, you can calculate $R^2$ for dt_model using the code `glance(dt_model)$r.squared`.\n\na.  Calculate and report $R^2$ for each model fit in the previous exercise.\n\nb.  To answer the question of interest, would it be useful to compare the $R^2$ in each model to choose the variable that is the strongest predictor of parasite similarity? Why or why not?\n\n::: callout-important\nAfter the team member working on Exercise 5 renders, commits, and pushes, **all other team members** should pull the changes and render the document. Finally, a team member different than the one responsible for typing up responses to Exercise 5 should do the last task outlined below.\n:::\n\n# Submission\n\n::: callout-warning\nBefore you wrap up the assignment, make sure all documents are updated on your GitHub repo. We will be checking these to make sure you have been practicing how to render and push changes.\n\nYou must turn in a PDF file to the Gradescope page by the submission deadline to be considered \"on time\".\n\nMake sure your data are tidy! That is, your code should not be running off the pages and spaced properly. See: <https://style.tidyverse.org/ggplot2.html>.\n:::\n\nTo submit your assignment:\n\n-   Go to <http://www.gradescope.com> and click *Log in* in the top right corner.\n-   Click *School Credentials* $\\rightarrow$ *Duke NetID* and log in using your NetID credentials.\n-   Click on your *STA 199* course.\n-   Click on the assignment, and you'll be prompted to submit it.\n-   Mark all the pages associated with exercise. All the pages of your lab should be associated with at least one question (i.e., should be \"checked\"). *If you do not do this, you will be subject to lose points on the assignment.*\n-   Do not select any pages of your .pdf submission to be associated with the *\"Workflow & formatting\"* question.\n\n# Grading\n\n| Component             | Points |\n|:----------------------|:-------|\n| Ex 1                  | 8      |\n| Ex 2                  | 14     |\n| Ex 3                  | 8      |\n| Ex 4                  | 8      |\n| Ex 5                  | 7      |\n| Workflow & formatting | 5      |\n| **Total**             | **50** |\n\n::: callout-note\nThe \"Workflow & formatting\" grade is to assess the reproducible workflow. This includes:\n\n-   linking all pages appropriately on Gradescope\n\n-   putting your team and member names in the YAML at the top of the document\n\n-   committing the submitted version of your `.qmd` to GitHub\n\n-   Are you under the 80 character code limit? (You shouldn't have to scroll to see all your code).\n\n-   Pipes `%>%`, `|>` and ggplot layers `+` should be followed by a new line\n\n-   You should be consistent with stylistic choices, e.g. only use 1 of `=` vs `<-` and `%>%` vs `|>`\n\n-   All binary operators should be surrounded by space. For example `x + y` is appropriate. `x+y` is not.\n:::\n",
    "supporting": [
      "lab-4_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}