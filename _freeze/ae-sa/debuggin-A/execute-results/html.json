{
  "hash": "9206e9f1a618d26fadc2e855a2fa529e",
  "result": {
    "markdown": "---\ntitle: \"AE 07: Debugging\"\ncategories: \n  - Application exercise\neditor: visual\n---\n\n\nIn this activity, we will go over how to identify and fix common coding errors. This demonstration will use the `mtcars` data set. In each of these code chunks, you will either need to add or alter code in order to get it running. Please take notes and treat this AE as a \"common errors debugging sheet\" to use in the future. There will only be one error per code chunk.\n\n1.  First, let's make a quick exploratory plot to assess these data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0     ✔ purrr   0.3.5\n✔ tibble  3.1.8     ✔ dplyr   1.0.9\n✔ tidyr   1.2.1     ✔ stringr 1.4.1\n✔ readr   2.1.3     ✔ forcats 0.5.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggplot2' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tidyr' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'readr' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'purrr' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nmtcars |> \n  ggplot(\n    aes(x = mpg, y = wt)\n  ) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](debuggin-A_files/figure-html/plot-1-1.png){width=672}\n:::\n:::\n\n\n**Takeaway** - need to library packages\n\n2.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars |>\n  ggplot(\n    aes(x = mpg, y = gear)\n  ) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](debuggin-A_files/figure-html/plot-2-1.png){width=672}\n:::\n:::\n\n\n**Takeaway** - object must be defined. Watch for mispellings \n\n\n::: {.cell}\n\n```{.r .cell-code}\n#|label: plot-3\n#|eval: false \n\nmtcars |>\n  ggplot(\n    aes(x = mpg, y = wt)\n  ) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](debuggin-A_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n**Takeaway** - match up ()s\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#|label: plot-4\n#|eval: false\n\nmtcars |>\n  ggplot(\n    aes(x = mpg)\n  ) + \n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](debuggin-A_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n**Takeaway** - can't have x and y\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#|label: plot-5\n#|eval: false\n\nmtcars.new <- mtcars |>\n  filter(mpg > 17)\n\nmtcars.new |>\n  ggplot(\n    aes(x = mpg, y = wt)\n  ) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](debuggin-A_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n**Takeaway** - must define new data set\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#|label: plot-6\n#|eval: false\n\n\nmtcars |>\n  ggplot(\n    aes(x = mpg, y = wt)\n  ) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](debuggin-A_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n**Takeaway** - don't have pipe on own line\n\n\n::: {.cell}\n\n```{.r .cell-code}\np <- mtcars |>\n  mutate(cyl = factor(cyl)) |>\n  ggplot(\n    aes(x = mpg, y = wt, color = cyl)\n  ) + \n  geom_point() \n  \np + scale_color_viridis_d()\n```\n\n::: {.cell-output-display}\n![](debuggin-A_files/figure-html/plot-7-1.png){width=672}\n:::\n:::\n\n\n**Takeaway** - _c vs _d \n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars |>\n  mutate(cyl = factor(cyl)) |>\n  ggplot(\n    aes(x = mpg, y = wt, color = cyl)\n  ) + \n  geom_point() \n```\n\n::: {.cell-output-display}\n![](debuggin-A_files/figure-html/plot-8-1.png){width=672}\n:::\n:::\n\n\n**Takeaway** - missing ,\n\n## HW-1 Demo\n\nThe following code has multiple errors. Let's fix the code to the point where we make the following graph:\n\n![](images/recreate.png)\n\nStrategies:\n\n-   Don't diagnose all errors at once\n\n-   Go line by line\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(openintro)\n \nduke_forest |>\n  mutate(garage = if_else(str_detect(parking, \"Garage\"), \"Garage\", \"No garage\")) |>\n  ggplot(aes(x = price, fill = garage)) +\n  geom_histogram() +\n  facet_wrap(~garage, ncol = 1) +\n  labs(\n    x = \"Price in $\",\n    y = \"\",\n    title = \"Histogram of Price of Homes by Garage or not\",\n    fill = \"Garage or not\"\n  )\n```\n\n::: {.cell-output-display}\n![](debuggin-A_files/figure-html/price-garage-1.png){width=672}\n:::\n:::\n\n\n\n**Takeaway** - str_detect needs variable to search for \n\nx = needs quotes \n\nfacet_wrap needs ~ before variable ",
    "supporting": [
      "debuggin-A_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}