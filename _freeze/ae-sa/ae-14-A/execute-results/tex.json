{
  "hash": "b9e2bc645e4a6c029e398098cca4e9fa",
  "result": {
    "markdown": "---\ntitle: \"Suggested Answers: ae-14\"\nformat: pdf\neditor: visual\n---\n\n\nNote - if you don't have the MASS package, you can install it before running `library` by writing the following code in the console: install.packages(\"MASS\")\n\n## Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(palmerpenguins)\nlibrary(MASS) #for stepAIC\n```\n:::\n\n\n## Warm Up \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlinear_reg() |>\n  set_engine(\"lm\") |>\n  fit(body_mass_g ~ island *flipper_length_mm, data = penguins) |>\n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 x 5\n  term                              estimate std.error statistic  p.value\n  <chr>                                <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)                        -5464.     431.      -12.7  2.51e-30\n2 islandDream                         3551.     969.        3.66 2.89e- 4\n3 islandTorgersen                     3218.    1680.        1.92 5.62e- 2\n4 flipper_length_mm                     48.5      2.05     23.7  1.66e-73\n5 islandDream:flipper_length_mm        -19.4      4.94     -3.93 1.03e- 4\n6 islandTorgersen:flipper_length_mm    -17.4      8.73     -1.99 4.69e- 2\n```\n:::\n\n```{.r .cell-code}\npenguins <- penguins |>\n  mutate(island = factor(island, levels = c(\"Dream\" , \"Biscoe\", \"Torgersen\")))\n\nlinear_reg() |>\n  set_engine(\"lm\") |>\n  fit(body_mass_g ~ island * flipper_length_mm, data = penguins) |>\n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 x 5\n  term                              estimate std.error statistic  p.value\n  <chr>                                <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)                       -1913.      868.      -2.20  2.82e- 2\n2 islandBiscoe                      -3551.      969.      -3.66  2.89e- 4\n3 islandTorgersen                    -333.     1841.      -0.181 8.57e- 1\n4 flipper_length_mm                    29.1       4.49     6.49  3.12e-10\n5 islandBiscoe:flipper_length_mm       19.4       4.94     3.93  1.03e- 4\n6 islandTorgersen:flipper_length_mm     1.99      9.60     0.208 8.36e- 1\n```\n:::\n:::\n\n\n## R-squared demonstration \n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_1 <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(body_mass_g ~ island, data = penguins) \n\nset.seed(33)\npenguins <- penguins |>\n  mutate(random_numbers = rnorm(nrow(penguins), 1, 10))\n\nmodel_2 <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(body_mass_g ~ island * random_numbers, data = penguins) \n\n\nglance(model_1)$r.squared\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.3935772\n```\n:::\n\n```{.r .cell-code}\nglance(model_2)$r.squared\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.3952714\n```\n:::\n:::\n\n\n\n-- Did r-squared increase or decrease from model 1 to model 2? Why?\n\nIncreased. it will always increase as we add more terms. \n\n# Building a model \n\nScenario: We have fit many models over the last 3 classes that model body mass of penguins as a response. Any of the variables in the data set *could* be used as predictors (explanatory variables). We want our model to only include the most useful predictors. \n\n## Adjusted r-squared \n\nRun `names(penguins)` to recall the number of variables in our data set. Next, fit two competing models that model body mass as the response variable. Make an argument for the \"better fitting model\" using adjusted r-squared below. \n\nHint: In the same pipe used to fit the model, use `glance |> pull(adj.r.squared)` to get the appropriate information\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlinear_reg() |>\n  set_engine(\"lm\") |>\n  fit(body_mass_g ~ island*year + flipper_length_mm, data = penguins) |>\n  glance() |>\n  pull(adj.r.squared)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.7840809\n```\n:::\n\n```{.r .cell-code}\nlinear_reg() |>\n  set_engine(\"lm\") |>\n  fit(body_mass_g ~ island*bill_length_mm, data = penguins) |>\n  glance() |>\n  pull(adj.r.squared)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.7577928\n```\n:::\n:::\n\n\n\n## Backward elimination \n\nBackward elimination starts with the the model that includes all potential predictor variables. Variables are eliminated one-at-a-time from the model until we cannot improve the model any further.\n\nProcedure:\n\n-   Start with a full model that has all predictors we consider and compute the AIC or adjusted-r-squared.\n\n-   Next fit every possible model with 1 less predictor.\n\n-   Compare AIC or adjusted-r-squared scores to select the best model with 1 less predictor if they show improvement over full model.\n\n-   Repeat steps 2 and 3 until you score the model with no predictors.\n\n-   Compare AIC or adjusted-r-squared among all tested models to select the best model.\n\n## Example \n\nTo better understand the idea of backwards selection, we are going to manually walk through one iteration of the procedure above. Our \"full\" model will be defined as an additive model with flipper length, bill length and island on our response body mass. With this information, perform backwards selection and report which variable *will not* be in the final backward elimination model. Use AIC as your criteria.\n\nHint: In the same pipe used to fit the model, instead of using `tidy()`, use `glance |> pull(AIC)` to get the appropriate information. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlinear_reg() |>\n  set_engine(\"lm\") |>\n  fit(body_mass_g ~ flipper_length_mm + bill_length_mm + island, data = penguins) |>\n  glance() |>\n  pull(AIC)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5035.615\n```\n:::\n\n```{.r .cell-code}\n## Choose the model above \n\n\nlinear_reg() |>\n  set_engine(\"lm\") |>\n  fit(body_mass_g ~  bill_length_mm + island, data = penguins) |>\n  glance() |>\n  pull(AIC)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5216.441\n```\n:::\n:::\n\n\n\n## Forward Selection \n\nProcedure: \n\n-   Start with a model that has no predictors.\n\n-   Next fit every possible model with 1 additional predictor and score each model.\n\n-   Compare AIC scores to select the best model with 1 additional predictor vs first model.\n\n-   Repeat steps 2 and 3 until you can no longer improve the model.\n\nPerform 1 step of forward selection using the same variables mentioned above. What variable *will be* in the final forward selection model?\n\nHint: We can fit a model with no predictors using `~ 1` in place of any explanatory variable. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlinear_reg() |>\n  set_engine(\"lm\") |>\n  fit(body_mass_g ~ 1 , data = penguins) |>\n  glance() |>\n  pull(AIC)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5547.496\n```\n:::\n\n```{.r .cell-code}\n### island, flipper length, bill length \n\nlinear_reg() |>\n  set_engine(\"lm\") |>\n  fit(body_mass_g ~ flipper_length_mm, data = penguins) |>\n  glance() |>\n  pull(AIC)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5062.855\n```\n:::\n\n```{.r .cell-code}\nlinear_reg() |>\n  set_engine(\"lm\") |>\n  fit(body_mass_g ~ flipper_length_mm + island, data = penguins) |>\n  glance() |>\n  pull(AIC)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5044.513\n```\n:::\n\n```{.r .cell-code}\nlinear_reg() |>\n  set_engine(\"lm\") |>\n  fit(body_mass_g ~ flipper_length_mm * island * bill_length_mm, data = penguins) |>\n  glance() |>\n  pull(AIC)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4997.089\n```\n:::\n:::\n\n\n\n**Notes about model selection**\n\n-- what a “meaningful” difference? You should set it\n\n-- backward elimination and forward selection sometimes arrive at different final models\n\n**So which do I choose?** \n\nForward stepwise selection is used when the number of variables under consideration is very large\n\nStarting with the full model (backward selection) has the advantage of considering the effects of all variables simultaneously.\n\n\n# Performing stepwise in R\n\nBefore we show how to do this in R.....\n\n*Note! Please read!* \n\nIt is a bad idea to simply let R alone choose your best fitting model for you. Good practices include: \n\n-- Talking with the subject expert about variables that must or should not be in your model \n\n-- Align variables to your research question. This includes: \n\n--- keeping the variables you are interested in.... and the variables you want to account for...\n\n# If Time (Not Main Focus of Lesson)\n\nPeople use stepwise selection when their goal is to pick the overall \"best\" model. \n\nThere are many functions that will allow you to perform stepwise selection in R. Today, we are going to introduce ourselves to `stepAIC`. Currently, performing stepwise selection is very difficult with tidymodels, so we are going to write our models in base R using the `lm` function. Let's do this below. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm1 <- lm(body_mass_g ~ flipper_length_mm*island, data = penguins)\n```\n:::\n\n\n\nIn `stepAIC`, the arguments are: \n\n-- object: your model name \n-- scope: your \"full model\" if doing forward selection \n-- direction: \"forward\", or \"backward\". \n\n## Backward selection\n\nLet's assume that our full model is an additive model between flipper length and island. Is this the best model? Is a SLR model better?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm1 <- lm(body_mass_g ~ flipper_length_mm+island, data = penguins)\n\nstepAIC(lm1,  direction = \"backward\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nStart:  AIC=4071.96\nbody_mass_g ~ flipper_length_mm + island\n\n                    Df Sum of Sq       RSS    AIC\n<none>                            49512346 4072.0\n- island             2   3342450  52854796 4090.3\n- flipper_length_mm  1  83480840 132993186 4407.9\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = body_mass_g ~ flipper_length_mm + island, data = penguins)\n\nCoefficients:\n      (Intercept)  flipper_length_mm       islandBiscoe    islandTorgersen  \n         -4887.17              44.54             262.18              77.05  \n```\n:::\n:::\n\n\nWrite out how to interpret the output below:\n\nThe code suggests what the AIC would be if the variable listed in the first column was removed. The <none> represents the \"full\" model, or when no variables are removed. \n\nNow, fit the interaction model and perform backward selection using `stepAIC`. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm1 <- lm(body_mass_g ~ flipper_length_mm*island, data = penguins)\n```\n:::\n\n\nWrite out how to interpret the output below:\n\nBased on the output, we should select the interaction model. \n\n## Forward Selection \n\nWhen performing forward selection, we need to be conscious about the scope (full model). Fit a model with just island as the explanatory variable. Define the scope as an additive model between island, bill length, and flipper length. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm3 <- lm(body_mass_g ~ island, data = penguins)\n\nstepAIC(lm3,  scope = ~bill_length_mm + island + flipper_length_mm, direction = \"forward\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nStart:  AIC=4407.88\nbody_mass_g ~ island\n\n                    Df Sum of Sq       RSS    AIC\n+ flipper_length_mm  1  83480840  49512346 4072.0\n+ bill_length_mm     1  51139275  81853911 4243.9\n<none>                           132993186 4407.9\n\nStep:  AIC=4071.96\nbody_mass_g ~ island + flipper_length_mm\n\n                 Df Sum of Sq      RSS    AIC\n+ bill_length_mm  1   1552910 47959436 4063.1\n<none>                        49512346 4072.0\n\nStep:  AIC=4063.06\nbody_mass_g ~ island + flipper_length_mm + bill_length_mm\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = body_mass_g ~ island + flipper_length_mm + bill_length_mm, \n    data = penguins)\n\nCoefficients:\n      (Intercept)       islandBiscoe    islandTorgersen  flipper_length_mm  \n         -4602.85             336.64             162.38              38.86  \n   bill_length_mm  \n            18.40  \n```\n:::\n:::\n\n\n\n**An important note** \n\nThe calculations of AIC are well beyond the scope of this course. However, it should be noted that `stepAIC` makes this calculation slightly differently than how AIC is calculated and pulled form our tidy model with glance and pull. Thus, it is critical that you (for whatever reason) do not cross compare AIC values when trying to make a model selection decision. \n\n## Additional Practice \n\nResearcher 1 wants to model flipper length by sex of the penguin. A second researcher wants to add island to the model as well, arguing their model will be better. Researcher 1 does not believe so. Who is right? Justify your answer below.\n\nSuggestion: For practice, use adjusted-r-squared\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlinear_reg() |>\n  set_engine(\"lm\") |>\n  fit(body_mass_g ~ sex, data = penguins) |>\n  glance() |>\n  pull(adj.r.squared)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.1781385\n```\n:::\n\n```{.r .cell-code}\nlinear_reg() |>\n  set_engine(\"lm\") |>\n  fit(body_mass_g ~ sex + island, data = penguins) |>\n  glance() |>\n  pull(adj.r.squared)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.5608203\n```\n:::\n:::\n\n\n\nResearcher 2 is right. Adding island to the model vastly improves the adjusted r squared, suggesting that this model has a better overall fit. ",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}