{
  "hash": "dce39a343ea2737b8725cd2288f67ff4",
  "result": {
    "markdown": "---\ntitle: \"Suggested Answers: Hypo-II\"\nformat: html\neditor: visual\n---\n\n\n# Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0     ✔ purrr   0.3.5\n✔ tibble  3.1.8     ✔ dplyr   1.0.9\n✔ tidyr   1.2.1     ✔ stringr 1.4.1\n✔ readr   2.1.3     ✔ forcats 0.5.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggplot2' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tidyr' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'readr' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'purrr' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidymodels)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ────────────────────────────────────── tidymodels 1.0.0 ──\n✔ broom        1.0.1     ✔ rsample      1.1.0\n✔ dials        1.1.0     ✔ tune         1.0.1\n✔ infer        1.0.3     ✔ workflows    1.1.0\n✔ modeldata    1.0.1     ✔ workflowsets 1.0.0\n✔ parsnip      1.0.3     ✔ yardstick    1.1.0\n✔ recipes      1.0.3     \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'broom' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'dials' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'parsnip' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'recipes' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Dig deeper into tidy modeling with R at https://www.tmwr.org\n```\n:::\n\n```{.r .cell-code}\nabb <- read_csv(\"data/asheville.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 50 Columns: 1\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (1): ppg\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n\n## Conclude the Null Hypothesis\n\nTo start this activity, we are going to demonstrate why we can never conclude the null hypothesis. We will use the airbrb data set for this demonstration.\n\nDecisions are always in terms of the null hypothesis, but we can never conclude the null hypothesis.... why?\n\nLet's assume your null hypothesis for the Airbnb question is: $\\mu$ = 70, and you are interested in $\\mu$ \\> 70\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnull_dist2 <- abb |>\n  specify(response = ppg) |>\n  hypothesize(null = \"point\", mu = 70) |>\n  generate(reps = 1000, type = \"bootstrap\") |>\n  calculate(stat = \"mean\")\n\nvisualize(null_dist2) +\n shade_p_value(obs_stat = 76.6, direction = \"greater\")\n```\n\n::: {.cell-output-display}\n![](ae-21-A_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\nnull_dist2 |>\n  get_p_value(obs_stat = 76.6, direction = \"greater\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n  p_value\n    <dbl>\n1   0.158\n```\n:::\n:::\n\n\nSo now.... I **incorrectly** conclude that $\\mu$ = 70.\n\nAnother research assumes that $\\mu$ = 72....\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnull_dist3 <- abb |>\n  specify(response = ppg) |>\n  hypothesize(null = \"point\", mu = 72) |>\n  generate(reps = 1000, type = \"bootstrap\") |>\n  calculate(stat = \"mean\")\n\nvisualize(null_dist3) +\n shade_p_value(obs_stat = 76.6, direction = \"greater\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in regularize.values(x, y, ties, missing(ties), na.rm = na.rm):\ncollapsing to unique 'x' values\n```\n:::\n\n::: {.cell-output-display}\n![](ae-21-A_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\nnull_dist3 |>\n  get_p_value(obs_stat = 76.6, direction = \"greater\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n  p_value\n    <dbl>\n1   0.263\n```\n:::\n:::\n\n\nSo now.... I **incorrectly** conclude that $\\mu$ = 72....??????\n\n# Difference in means\n\nThe Iris Dataset contains four features (length and width of sepals and petals) of 50 samples of three species of Iris (Iris setosa, Iris virginica and Iris versicolor). A sepal is the outer parts of the flower (often green and leaf-like) that enclose a developing bud. The petal are parts of a flower that are the pollen producing part of the flower that are often conspicuously colored. The difference between sepals and petals can be seen below.\n\nThe data were collected in 1936 at the Gaspé Peninsula, in Canada. For the first question of the exam, you will use this data sets to investigate a variety of relationships to learn more about each of these three flower species. The data set is prepackaged in R, and is called `iris`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(iris)\n```\n:::\n\n\nGoal: Previously, we had conducted a hypothesis test for a single mean (price per guest). Now, we are extending what we know to the difference in mean case.\n\nSpecifically, we are going to test for a difference in mean Sepal length between the Setosa and Versicolor.\n\n## EDA\n\nFirst, we want to filter the data set to only contain our two `Species`. Please create a new data set that achieves this below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris_filter <- iris |>\n  filter(Species != \"virginica\")\n```\n:::\n\n\nBelow, calculate and create the following:\n\n-- Mean sepal length for each group\n\n-- Box plot of Sepal length for each group\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris_filter |>\n  group_by(Species) |>\n  summarize(mean_sep = mean(Sepal.Length))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 2\n  Species    mean_sep\n  <fct>         <dbl>\n1 setosa         5.01\n2 versicolor     5.94\n```\n:::\n\n```{.r .cell-code}\niris_filter |>\n  ggplot(\n    aes(x = Sepal.Length, y = Species)\n  ) + \n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](ae-21-A_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nWhat is your point estimate? Using proper notation, report it below (setosa - versicolor).\n\n$\\bar{x_s} - \\bar{x_v}$ = -0.93\n\nNow, we are going to see if this difference is by chance, or if this difference is meaningful...\n\nBelow, write out the null and alternative hypothesis in both words + notation.\n\n$H_o$: $\\mu_s - \\mu_v$ = 0\n\n$H_a$: $\\mu_s - \\mu_v \\neq$ 0\n\nHo: The true mean Sepal Length for the setosa species is the same as the true mean Sepal Length for the versicolor species.\n\nHa: The true mean Sepal Length for the setosa species is different than the true mean Sepal Length for the versicolor species.\n\n## Building a distribution\n\nLet's use simulation-based methods to conduct the hypothesis test specified above. We'll start by generating the null distribution.\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris_filter |>\n  group_by(Species) |>\n  summarize(count = n())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 2\n  Species    count\n  <fct>      <int>\n1 setosa        50\n2 versicolor    50\n```\n:::\n:::\n\n\n-   How do we generate the null distribution? Detail the steps below.\n\n-- PERMUTE or shuffle all observations together, regardless of their original species\n\n-- Distribute observations into two new groups of size n1 = 50 and size n2 = 50\n\n-- Calculate the new sample means for each group\n\n-- Subtract the new sample means\n\nNow, let's do the above process many many times...\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnull_dist <- iris_filter |>\n  specify(response = Sepal.Length, explanatory = Species) |>\n  hypothesize(null = \"independence\") |>\n  generate(reps = 1000, type = \"permute\") |>\n  calculate(stat = \"diff in means\", order = c(\"setosa\", \"versicolor\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nDropping unused factor levels virginica from the supplied explanatory variable 'Species'.\n```\n:::\n:::\n\n\n## Visualize\n\nNow, create an appropriate visualization fo your null distribution. Where is this distribution centered? Why does this make sense?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnull_dist |>\n  ggplot(\n    aes(x = stat)\n  ) + \n  geom_histogram()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](ae-21-A_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nThis distribution is centered roughly at 0. This makes sense because we assume that the null hypothesis is true.\n\nNow, add a vertical line on your null distribution that represents your sample statistic. Based on the position of this line, do you your sample mean is an unusual observation under the assumption of the null hypothesis?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnull_dist |>\n  ggplot(\n    aes(x = stat)\n  ) + \n  geom_histogram() + \n  geom_vline(xintercept = -0.93)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](ae-21-A_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nCalculate your p-value below\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnull_dist |>\n  get_p_value(obs_stat = -0.93, direction = \"two sided\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Please be cautious in reporting a p-value of 0. This result is an\napproximation based on the number of `reps` chosen in the `generate()` step. See\n`?get_p_value()` for more information.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n  p_value\n    <dbl>\n1       0\n```\n:::\n:::\n\n\n\\<0.001\n\nAnd visualize it..\n\nLet's visualize it!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvisualize(null_dist) +\n shade_p_value(obs_stat = -0.93, direction = \"two sided\") + \n shade_p_value(obs_stat = 0.93, direction = \"two sided\")\n```\n\n::: {.cell-output-display}\n![](ae-21-A_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "ae-21-A_files\\figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}