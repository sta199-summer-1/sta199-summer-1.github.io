{
  "hash": "69d7aa08f79931e63bf5fb224d98d3c7",
  "result": {
    "markdown": "---\ntitle: \"Quarto & R Demo- Suggested Answers\"\nformat: html\n---\n\n\nElijah Meyer\n\n## Packages for class\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0     ✔ purrr   0.3.5\n✔ tibble  3.1.8     ✔ dplyr   1.0.9\n✔ tidyr   1.2.1     ✔ stringr 1.4.1\n✔ readr   2.1.3     ✔ forcats 0.5.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggplot2' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tidyr' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'readr' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'purrr' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n:::\n\n\n## Quarto is great\n\nQuarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.\n\n## mtcars\n\nFor the remainder of the class, we will use the `mtcars` data set.\n\n-   Take a glimpse of the data set using the `glimpse` function in R\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(mtcars)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 32\nColumns: 11\n$ mpg  <dbl> 21.0, 21.0, 22.8, 21.4, 18.7, 18.1, 14.3, 24.4, 22.8, 19.2, 17.8,…\n$ cyl  <dbl> 6, 6, 4, 6, 8, 6, 8, 4, 4, 6, 6, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4, 8,…\n$ disp <dbl> 160.0, 160.0, 108.0, 258.0, 360.0, 225.0, 360.0, 146.7, 140.8, 16…\n$ hp   <dbl> 110, 110, 93, 110, 175, 105, 245, 62, 95, 123, 123, 180, 180, 180…\n$ drat <dbl> 3.90, 3.90, 3.85, 3.08, 3.15, 2.76, 3.21, 3.69, 3.92, 3.92, 3.92,…\n$ wt   <dbl> 2.620, 2.875, 2.320, 3.215, 3.440, 3.460, 3.570, 3.190, 3.150, 3.…\n$ qsec <dbl> 16.46, 17.02, 18.61, 19.44, 17.02, 20.22, 15.84, 20.00, 22.90, 18…\n$ vs   <dbl> 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0,…\n$ am   <dbl> 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0,…\n$ gear <dbl> 4, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3,…\n$ carb <dbl> 4, 4, 1, 1, 2, 1, 4, 2, 2, 4, 4, 3, 3, 3, 4, 4, 4, 1, 2, 1, 1, 2,…\n```\n:::\n:::\n\n\nYou can run code in a few different ways. You can click the green arrow in the code chunk; use a keyboard short cut (Ctrl+Enter for PC; Cmd+Return for Mac). For a list of other keyboard shortcuts, please visit the following: https://support.posit.co/hc/en-us/articles/200711853-Keyboard-Shortcuts-in-the-RStudio-IDE\n\n**It's a good habit to `commit` and `push` after you answer questions. Do this now!**\n\n-   Use `?` before the data set name to get more information about the pre-loaded data in R. Type this in the console.\n\n-   Now, filter out the any cars who weigh more than 4000 lbs *in a single pipeline*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilter(mtcars, wt < 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                   mpg cyl  disp  hp drat    wt  qsec vs am gear carb\nMazda RX4         21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag     21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710        22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive    21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout 18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2\nValiant           18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1\nDuster 360        14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4\nMerc 240D         24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2\nMerc 230          22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2\nMerc 280          19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4\nMerc 280C         17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4\nMerc 450SL        17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3\nMerc 450SLC       15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3\nFiat 128          32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1\nHonda Civic       30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2\nToyota Corolla    33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1\nToyota Corona     21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1\nDodge Challenger  15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2\nAMC Javelin       15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2\nCamaro Z28        13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4\nPontiac Firebird  19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2\nFiat X1-9         27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1\nPorsche 914-2     26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2\nLotus Europa      30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2\nFord Pantera L    15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4\nFerrari Dino      19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6\nMaserati Bora     15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8\nVolvo 142E        21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2\n```\n:::\n\n```{.r .cell-code}\n# We often use the pipe \nmtcars |>\n  filter(wt < 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                   mpg cyl  disp  hp drat    wt  qsec vs am gear carb\nMazda RX4         21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag     21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710        22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive    21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout 18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2\nValiant           18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1\nDuster 360        14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4\nMerc 240D         24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2\nMerc 230          22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2\nMerc 280          19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4\nMerc 280C         17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4\nMerc 450SL        17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3\nMerc 450SLC       15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3\nFiat 128          32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1\nHonda Civic       30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2\nToyota Corolla    33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1\nToyota Corona     21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1\nDodge Challenger  15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2\nAMC Javelin       15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2\nCamaro Z28        13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4\nPontiac Firebird  19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2\nFiat X1-9         27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1\nPorsche 914-2     26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2\nLotus Europa      30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2\nFord Pantera L    15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4\nFerrari Dino      19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6\nMaserati Bora     15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8\nVolvo 142E        21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2\n```\n:::\n:::\n\n\n-   Notice how the data were not overwritten by running `mtcars` in the console.\n\nNow, filter out the any cars who weigh more than 4000 lbs and save the new data set named `small_cars`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsmall_cars <- mtcars |>\n  filter(wt < 4)\n```\n:::\n\n\n-   Using your new data set, take the mean weight of cars using the `summarise` function. Report the mean below. Hint, look up the help file to the function, and scroll down to the examples.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsmall_cars |> \n  summarise(mean = mean(wt))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      mean\n1 2.959393\n```\n:::\n:::\n\n\n## Render\n\nWhen you click the **Render** button a document will be generated that includes both content and the output of embedded code. Note: if something is wrong with your code, your document will not render.\n\n## Optional\n\n-   Visit the follow website: https://dplyr.tidyverse.org/reference/index.html\n\nChoose a function of your choice and try to implement it on these data below\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#insert code here\n```\n:::\n",
    "supporting": [
      "ae-01-A_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}